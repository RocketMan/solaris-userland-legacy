# Solaris is compiled with --enable-xpg-echo-default=yes. Some tests expect
# this option disabled. And adding some lines will offset the results where
# bash reports on which line problem was (correctly) observed. So we have to
# offset the expected results too
#
# Not for upstream.

--- tests/exp5.sub
+++ tests/exp5.sub
@@ -12,6 +12,8 @@ #   You should have received a copy of t
 #   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 # expansions involving patterns
+shopt -u xpg_echo
+
 var='[hello'
 echo "${var//[/}"
 
--- tests/varenv12.sub
+++ tests/varenv12.sub
@@ -12,6 +12,7 @@ #   You should have received a copy of t
 #   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 set -o posix
+shopt -u xpg_echo
 
 fn() { foo=abc : ; typeset +x foo; printenv|grep ^foo=; }
 
--- tests/assoc11.sub
+++ tests/assoc11.sub
@@ -13,7 +13,7 @@
 #
 # these tests were previously in array19.sub, but they are acceptable syntax now
 
-declare -A a
+shopt -u xpg_echo; declare -A a
 declare a='(1 2 3)'
 declare -p a
 unset a
--- tests/varenv16.sub
+++ tests/varenv16.sub
@@ -14,6 +14,8 @@
 # test whether or not temporary environment assignments are exported
 # in posix mode. works now, posix says it will not work in the future
 
+shopt -u xpg_echo
+
 show2()
 {
         printf %s "foo=${foo-<unset>}"
--- tests/new-exp.tests
+++ tests/new-exp.tests
@@ -17,7 +17,7 @@ fi
 
 # must do this because posix mode causes process substitution to be disabled
 # and flagged as a syntax error, which causes the shell to exit
-set +o posix
+set +o posix; shopt -u xpg_echo
 
 expect()
 {
--- tests/new-exp16.sub
+++ tests/new-exp16.sub
@@ -16,7 +16,7 @@ HOME=/homes/chet
 string=abcdefg
 set -- a b c
 
-shopt -u patsub_replacement
+shopt -u patsub_replacement xpg_echo
 
 # verify existing behavior
 echo ${string/abc/~}
