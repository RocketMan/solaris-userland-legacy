Fix build with ICU 68
Not worth filing upstream as nodejs10 is going out of support soon and newer
versions aren't affected.
diff -r 439956c90548 deps/v8/src/objects/intl-objects.cc
--- a/deps/v8/src/objects/intl-objects.cc	Tue Dec 08 16:45:05 2020 +0000
+++ b/deps/v8/src/objects/intl-objects.cc	Tue Dec 08 16:56:21 2020 +0000
@@ -243,7 +243,7 @@
   char result[ULOC_FULLNAME_CAPACITY];
   status = U_ZERO_ERROR;
   uloc_toLanguageTag(icu_locale.getName(), result, ULOC_FULLNAME_CAPACITY,
-                     FALSE, &status);
+                     false, &status);
   if (U_SUCCESS(status)) {
     JSObject::SetProperty(resolved, factory->NewStringFromStaticChars("locale"),
                           factory->NewStringFromAsciiChecked(result),
@@ -422,7 +422,7 @@
   char result[ULOC_FULLNAME_CAPACITY];
   UErrorCode status = U_ZERO_ERROR;
   uloc_toLanguageTag(icu_locale.getName(), result, ULOC_FULLNAME_CAPACITY,
-                     FALSE, &status);
+                     false, &status);
   if (U_SUCCESS(status)) {
     JSObject::SetProperty(resolved, factory->NewStringFromStaticChars("locale"),
                           factory->NewStringFromAsciiChecked(result),
@@ -657,7 +657,7 @@
   char result[ULOC_FULLNAME_CAPACITY];
   status = U_ZERO_ERROR;
   uloc_toLanguageTag(icu_locale.getName(), result, ULOC_FULLNAME_CAPACITY,
-                     FALSE, &status);
+                     false, &status);
   if (U_SUCCESS(status)) {
     JSObject::SetProperty(resolved, factory->NewStringFromStaticChars("locale"),
                           factory->NewStringFromAsciiChecked(result),
@@ -796,7 +796,7 @@
   char result[ULOC_FULLNAME_CAPACITY];
   status = U_ZERO_ERROR;
   uloc_toLanguageTag(icu_locale.getName(), result, ULOC_FULLNAME_CAPACITY,
-                     FALSE, &status);
+                     false, &status);
   if (U_SUCCESS(status)) {
     JSObject::SetProperty(resolved, factory->NewStringFromStaticChars("locale"),
                           factory->NewStringFromAsciiChecked(result),
diff -r 439956c90548 deps/v8/src/runtime/runtime-intl.cc
--- a/deps/v8/src/runtime/runtime-intl.cc	Tue Dec 08 16:45:05 2020 +0000
+++ b/deps/v8/src/runtime/runtime-intl.cc	Tue Dec 08 16:59:24 2020 +0000
@@ -85,7 +85,7 @@
   char result[ULOC_FULLNAME_CAPACITY];
 
   // Force strict BCP47 rules.
-  uloc_toLanguageTag(icu_result, result, ULOC_FULLNAME_CAPACITY, TRUE, &error);
+  uloc_toLanguageTag(icu_result, result, ULOC_FULLNAME_CAPACITY, true, &error);
 
   if (U_FAILURE(error) || error == U_STRING_NOT_TERMINATED_WARNING) {
     return *factory->NewStringFromAsciiChecked(kInvalidTag);
@@ -132,7 +132,7 @@
 
     error = U_ZERO_ERROR;
     // No need to force strict BCP47 rules.
-    uloc_toLanguageTag(icu_name, result, ULOC_FULLNAME_CAPACITY, FALSE, &error);
+    uloc_toLanguageTag(icu_name, result, ULOC_FULLNAME_CAPACITY, false, &error);
     if (U_FAILURE(error) || error == U_STRING_NOT_TERMINATED_WARNING) {
       // This shouldn't happen, but lets not break the user.
       continue;
@@ -164,7 +164,7 @@
   char result[ULOC_FULLNAME_CAPACITY];
   UErrorCode status = U_ZERO_ERROR;
   uloc_toLanguageTag(default_locale.getName(), result, ULOC_FULLNAME_CAPACITY,
-                     FALSE, &status);
+                     false, &status);
   if (U_SUCCESS(status)) {
     return *factory->NewStringFromAsciiChecked(result);
   }
diff -r 9b705c612889 deps/v8/src/runtime/runtime-intl.cc
--- a/deps/v8/src/runtime/runtime-intl.cc	Tue Dec 08 17:15:52 2020 +0000
+++ b/deps/v8/src/runtime/runtime-intl.cc	Tue Dec 08 17:17:21 2020 +0000
@@ -399,9 +399,9 @@
     std::unique_ptr<uc16[]> sap1;
     std::unique_ptr<uc16[]> sap2;
     icu::UnicodeString string_val1(
-        FALSE, GetUCharBufferFromFlat(flat1, &sap1, length1), length1);
+        false, GetUCharBufferFromFlat(flat1, &sap1, length1), length1);
     icu::UnicodeString string_val2(
-        FALSE, GetUCharBufferFromFlat(flat2, &sap2, length2), length2);
+        false, GetUCharBufferFromFlat(flat2, &sap2, length2), length2);
     result = collator->compare(string_val1, string_val2, status);
   }
   if (U_FAILURE(status)) return isolate->ThrowIllegalOperation();
