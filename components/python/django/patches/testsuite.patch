One test sometimes fails due to compiled .pyc file in Python 2.7 variant
of Django. This is fixed by forcing the use of the non-compiled .py file.

test_check_constraints sometimes fails due to a database table missing;
the exact reason is unknown. It was reported upstream but closed without
any fix. The most straightforward fix is to disable this test.

https://code.djangoproject.com/ticket/30617

--- Django-1.11.23/tests/pagination/tests.py
+++ Django-1.11.23/tests/pagination/tests.py
@@ -335,7 +335,7 @@ class ModelPaginationTests(TestCase):
         ))
         # The warning points at the Paginator caller (i.e. the stacklevel
         # is appropriate).
-        self.assertEqual(warning.filename, __file__)
+        self.assertEqual(warning.filename, __file__[:-1] if __file__.endswith('.pyc') else __file__)
 
     def test_paginating_unordered_object_list_raises_warning(self):
         """--- Django-1.11.23/tests/backends/tests.py
+++ Django-1.11.23/tests/backends/tests.py
@@ -5,6 +5,7 @@ from __future__ import unicode_literals
 import datetime
 import re
 import threading
+import sys
 import unittest
 import warnings
 from decimal import Decimal, Rounded
@@ -1006,6 +1007,7 @@ class FkConstraintsTests(TransactionTest
                 self.fail("IntegrityError should not have occurred.")
             transaction.set_rollback(True)
 
+    @unittest.skipIf(sys.platform.startswith("sunos"), "Sometimes fails on Solaris")
     def test_check_constraints(self):
         """
         Constraint checks should raise an IntegrityError when bad data is in the DB.
