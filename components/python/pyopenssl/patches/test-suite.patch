* Solaris doesn't have flaky and pretend python packages and, therefore, all
  tests depending on those are disabled.

test_crypto:
* OpenSSL X509_VERIFY_PARAM_set_time() time_t argument is starting to have an
  insufficient size for some used timestamps in 32-bit binaries.

test_set_default_verify_paths:
* This patch disables the test set default verify paths, which tries to connect
  to an external server. This tries to connect using s_client, which does
  not work within OWAN, even if proxy vaeriables are set.

--- pyOpenSSL-20.0.1/tests/test_crypto.py
+++ pyOpenSSL-20.0.1/tests/test_crypto.py
@@ -8,6 +8,7 @@ Unit tests for :py:mod:`OpenSSL.crypto`.
 from warnings import simplefilter
 
 import base64
+import ctypes
 from subprocess import PIPE, Popen
 from datetime import datetime, timedelta
 import sys
@@ -19,8 +20,6 @@ from cryptography.hazmat.backends.openss
 from cryptography.hazmat.primitives import serialization
 from cryptography.hazmat.primitives.asymmetric import rsa
 
-import flaky
-
 from OpenSSL.crypto import TYPE_RSA, TYPE_DSA, Error, PKey
 from OpenSSL.crypto import X509, X509Name
 from OpenSSL.crypto import (
@@ -1852,7 +1851,7 @@ class TestX509(_PKeyInteractionTestsMixi
         with pytest.raises(TypeError):
             cert.gmtime_adj_notBefore(None)
 
-    @flaky.flaky
+    @pytest.mark.skip(reason="We don't have flaky python package in Solaris")
     def test_gmtime_adj_notBefore(self):
         """
         `X509.gmtime_adj_notBefore` changes the not-before timestamp to be the
@@ -1878,7 +1877,7 @@ class TestX509(_PKeyInteractionTestsMixi
         with pytest.raises(TypeError):
             cert.gmtime_adj_notAfter(None)
 
-    @flaky.flaky
+    @pytest.mark.skip(reason="We don't have flaky python package in Solaris")
     def test_gmtime_adj_notAfter(self):
         """
         `X509.gmtime_adj_notAfter` changes the not-after timestamp
@@ -4095,6 +4094,8 @@ class TestX509StoreContext(object):
         store_ctx.set_store(store_good)
         assert store_ctx.verify_certificate() is None
 
+    @pytest.mark.skipif(ctypes.sizeof(ctypes.c_voidp) == 4,
+                        reason="We don't have flaky python package in Solaris")
     def test_verify_with_time(self):
         """
         `verify_certificate` raises error when the verification time is
--- pyOpenSSL-20.0.1/tests/test_ssl.py
+++ pyOpenSSL-20.0.1/tests/test_ssl.py
@@ -26,12 +26,8 @@ from os.path import join
 from weakref import ref
 from warnings import simplefilter
 
-import flaky
-
 import pytest
 
-from pretend import raiser
-
 from six import PY2, text_type
 
 from cryptography import x509
@@ -503,7 +499,7 @@ class TestContext(object):
         with pytest.raises(TypeError):
             context.set_cipher_list(object())
 
-    @flaky.flaky
+    @pytest.mark.skip(reason="We don't have flaky python package in Solaris")
     def test_set_cipher_list_no_cipher_match(self, context):
         """
         `Context.set_cipher_list` raises `OpenSSL.SSL.Error` with a
@@ -1212,6 +1208,7 @@ class TestContext(object):
         assert context._check_env_vars_set(dir_var, file_var) is True
         assert context._check_env_vars_set(dir_var, file_var) is True
 
+    @pytest.mark.skip(reason="We don't have pretend python package in Solaris")
     def test_verify_no_fallback_if_env_vars_set(self, monkeypatch):
         """
         Test that we don't use the fallback path if env vars are set.
@@ -1240,6 +1237,9 @@ class TestContext(object):
         reason="set_default_verify_paths appears not to work on Windows.  "
         "See LP#404343 and LP#404344.",
     )
+    @pytest.mark.skip(
+        reason="This test doesn't work within OWAN, even with proxy set"
+    )
     def test_set_default_verify_paths(self):
         """
         `Context.set_default_verify_paths` causes the platform-specific CA
