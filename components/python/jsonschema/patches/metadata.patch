We don't have importlib_metadata package in Solaris, and it seems unnecessary
to add it just to get a version of jsonschema dynamically. Because of this all
references to it are removed and __version__ replaced with "JSONSCHEMA_VERSION",
which is replaced during the build phase (see Makefile).

Jsonschema test suite has a test for correct version information, hence we will
catch possible issues. Also, with this approach, it's faster than before!

Not for upstream.

--- jsonschema-3.2.0/setup.cfg
+++ jsonschema-3.2.0/setup.cfg
@@ -28,7 +28,6 @@ packages = find:
 setup_requires = setuptools_scm
 install_requires = 
 	attrs>=17.4.0
-	importlib_metadata;python_version<'3.8'
 	pyrsistent>=0.14.0
 	setuptools
 	six>=1.11.0
--- jsonschema-3.2.0/jsonschema.egg-info/requires.txt
+++ jsonschema-3.2.0/jsonschema.egg-info/requires.txt
@@ -6,9 +6,6 @@ six>=1.11.0
 [:python_version < "3"]
 backports.functools_lru_cache
 
-[:python_version < "3.8"]
-importlib_metadata
-
 [format]
 idna
 jsonpointer>1.13
--- jsonschema-3.2.0/jsonschema/__init__.py
+++ jsonschema-3.2.0/jsonschema/__init__.py
@@ -27,8 +27,4 @@ from jsonschema.validators import (
     RefResolver,
     validate,
 )
-try:
-    from importlib import metadata
-except ImportError: # for Python<3.8
-    import importlib_metadata as metadata
-__version__ = metadata.version("jsonschema")
+__version__ = "JSONSCHEMA_VERSION"
