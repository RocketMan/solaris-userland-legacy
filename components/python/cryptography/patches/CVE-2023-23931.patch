Fixes CVE-2023-23931.
Desc:
  In affected versions `Cipher.update_into` would accept Python objects which
  implement the buffer protocol, but provide only immutable buffers. This would
  allow immutable objects (such as `bytes`) to be mutated, thus violating
  fundamental rules of Python and resulting in corrupted output. This now
  correctly raises an exception.

Upstream PR:
https://github.com/pyca/cryptography/pull/8230

--- cryptography-37.0.2/src/cryptography/hazmat/backends/openssl/ciphers.py
+++ cryptography-37.0.2/src/cryptography/hazmat/backends/openssl/ciphers.py
@@ -157,7 +157,7 @@ class _CipherContext:
         data_processed = 0
         total_out = 0
         outlen = self._backend._ffi.new("int *")
-        baseoutbuf = self._backend._ffi.from_buffer(buf)
+        baseoutbuf = self._backend._ffi.from_buffer(buf, require_writable=True)
         baseinbuf = self._backend._ffi.from_buffer(data)
 
         while data_processed != total_data_len:
--- cryptography-37.0.2/tests/hazmat/primitives/test_ciphers.py
+++ cryptography-37.0.2/tests/hazmat/primitives/test_ciphers.py
@@ -318,6 +318,14 @@ class TestCipherUpdateInto:
         with pytest.raises(ValueError):
             encryptor.update_into(b"testing", buf)
 
+    def test_update_into_immutable(self, backend):
+        key = b"\x00" * 16
+        c = ciphers.Cipher(AES(key), modes.ECB(), backend)
+        encryptor = c.encryptor()
+        buf = b"\x00" * 32
+        with pytest.raises((TypeError, BufferError)):
+            encryptor.update_into(b"testing", buf)
+
     @pytest.mark.supported(
         only_if=lambda backend: backend.cipher_supported(
             AES(b"\x00" * 16), modes.GCM(b"\x00" * 12)
