Submitted & accepted upstream for a release after 0.54.3:
https://github.com/mesonbuild/meson/pull/7370

From 3a79c52e0bf715cbaf76f37be4056b820ec809ef Mon Sep 17 00:00:00 2001
From: Alan Coopersmith <alan.coopersmith@oracle.com>
Date: Mon, 8 Jun 2020 16:41:52 -0700
Subject: [PATCH] symbolextractor: Add support for Solaris

Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>
---
 mesonbuild/scripts/symbolextractor.py | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/mesonbuild/scripts/symbolextractor.py b/mesonbuild/scripts/symbolextractor.py
index d393f933e..867c162dd 100644
--- a/mesonbuild/scripts/symbolextractor.py
+++ b/mesonbuild/scripts/symbolextractor.py
@@ -118,6 +118,13 @@ def gnu_syms(libfilename: str, outfilename: str):
         result += [' '.join(entry)]
     write_if_changed('\n'.join(result) + '\n', outfilename)
 
+def solaris_syms(libfilename: str, outfilename: str):
+    # gnu_syms() works with GNU nm & readelf, not Solaris nm & elfdump
+    origpath = os.environ['PATH']
+    os.environ['PATH'] = '/usr/gnu/bin:' + origpath
+    gnu_syms(libfilename, outfilename)
+    os.environ['PATH'] = origpath
+
 def osx_syms(libfilename: str, outfilename: str):
     # Get the name of the library
     output = call_tool('otool', ['-l', libfilename])
@@ -248,6 +255,8 @@ def gen_symbols(libfilename: str, impfilename: str, outfilename: str, cross_host
             # No import library. Not sure how the DLL is being used, so just
             # rebuild everything that links to it every time.
             dummy_syms(outfilename)
+    elif mesonlib.is_sunos():
+        solaris_syms(libfilename, outfilename)
     else:
         if not os.path.exists(TOOL_WARNING_FILE):
             mlog.warning('Symbol extracting has not been implemented for this '
-- 
2.19.3


From 2cd5f6efae4720cfaf06f1feab96e411e2120bc2 Mon Sep 17 00:00:00 2001
From: Alan Coopersmith <alan.coopersmith@oracle.com>
Date: Sun, 28 Jun 2020 12:57:08 -0700
Subject: [PATCH] symbolextractor: use try/finally in solaris_syms when
 wrapping gnu_syms

As suggested by dcbaker in
https://github.com/mesonbuild/meson/pull/7370#pullrequestreview-436872661

Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>
---
 mesonbuild/scripts/symbolextractor.py | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/mesonbuild/scripts/symbolextractor.py b/mesonbuild/scripts/symbolextractor.py
index 524027539..f4084bea8 100644
--- a/mesonbuild/scripts/symbolextractor.py
+++ b/mesonbuild/scripts/symbolextractor.py
@@ -124,9 +124,11 @@ def gnu_syms(libfilename: str, outfilename: str):
 def solaris_syms(libfilename: str, outfilename: str):
     # gnu_syms() works with GNU nm & readelf, not Solaris nm & elfdump
     origpath = os.environ['PATH']
-    os.environ['PATH'] = '/usr/gnu/bin:' + origpath
-    gnu_syms(libfilename, outfilename)
-    os.environ['PATH'] = origpath
+    try:
+        os.environ['PATH'] = '/usr/gnu/bin:' + origpath
+        gnu_syms(libfilename, outfilename)
+    finally:
+        os.environ['PATH'] = origpath
 
 def osx_syms(libfilename: str, outfilename: str):
     # Get the name of the library
-- 
2.19.3

