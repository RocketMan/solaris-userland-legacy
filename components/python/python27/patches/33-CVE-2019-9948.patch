Fixes CVE-2019-9948.
Desc:
  urllib in Python 2.x through 2.7.16 supports the local_file: scheme, which
  makes it easier for remote attackers to bypass protection mechanisms that
  blacklist file: URIs, as demonstrated by triggering a
  urllib.urlopen('local_file:///etc/passwd') call.

Upstream bug: https://bugs.python.org/issue35907

Taken from upstream:
https://github.com/python/cpython/commit/b15bde8058e821b383d81fcae68b335a752083ca
https://github.com/python/cpython/commit/942c31dffbe886ff02e25a319cc3891220b8c641


--- Python-2.7.16/Lib/test/test_urllib.py
+++ Python-2.7.16/Lib/test/test_urllib.py
@@ -1048,6 +1048,17 @@ class URLopener_Tests(unittest.TestCase)
             "spam://c:|windows%/:=&?~#+!$,;'@()*[]|/path/"),
             "//c:|windows%/:=&?~#+!$,;'@()*[]|/path/")
 
+    def test_local_file_open(self):
+        # bpo-35907, CVE-2019-9948: urllib must reject local_file:// scheme
+        class DummyURLopener(urllib.URLopener):
+            def open_local_file(self, url):
+                return url
+        for url in ('local_file://example', 'local-file://example'):
+            self.assertRaises(IOError, urllib.urlopen, url)
+            self.assertRaises(IOError, urllib.URLopener().open, url)
+            self.assertRaises(IOError, urllib.URLopener().retrieve, url)
+            self.assertRaises(IOError, DummyURLopener().open, url)
+            self.assertRaises(IOError, DummyURLopener().retrieve, url)
 
 # Just commented them out.
 # Can't really tell why keep failing in windows and sparc.
--- Python-2.7.16/Lib/urllib.py
+++ Python-2.7.16/Lib/urllib.py
@@ -203,7 +203,9 @@ class URLopener:
         name = 'open_' + urltype
         self.type = urltype
         name = name.replace('-', '_')
-        if not hasattr(self, name):
+
+        # bpo-35907: disallow the file reading with the type not allowed
+        if not hasattr(self, name) or name == 'open_local_file':
             if proxy:
                 return self.open_unknown_proxy(proxy, fullurl, data)
             else:
