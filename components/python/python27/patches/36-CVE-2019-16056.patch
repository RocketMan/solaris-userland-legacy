Fixes CVE-2019-16056.
Desc:
  An issue was discovered in Python through 2.7.16, 3.x through 3.5.7, 3.6.x
  through 3.6.9, and 3.7.x through 3.7.4. The email module wrongly parses
  email addresses that contain multiple @ characters. An application that
  uses the email module and implements some kind of checks on the From/To
  headers of a message could be tricked into accepting an email address that
  should be denied. An attack may be the same as in CVE-2019-11340; however,
  this CVE applies to Python more generally.

Upstream bug: https://bugs.python.org/issue34155

Upstream commit:
https://github.com/python/cpython/commit/4cbcd2f8c4e12b912e4d21fd892eedf7a3813d8e

--- Python-2.7.16/Lib/email/_parseaddr.py
+++ Python-2.7.16/Lib/email/_parseaddr.py
@@ -336,7 +336,12 @@ class AddrlistClass:
         aslist.append('@')
         self.pos += 1
         self.gotonext()
-        return EMPTYSTRING.join(aslist) + self.getdomain()
+        domain = self.getdomain()
+        if not domain:
+            # Invalid domain, return an empty address instead of returning a
+            # local part to denote failed parsing.
+            return EMPTYSTRING
+        return EMPTYSTRING.join(aslist) + domain
 
     def getdomain(self):
         """Get the complete domain name from an address."""
@@ -351,6 +356,10 @@ class AddrlistClass:
             elif self.field[self.pos] == '.':
                 self.pos += 1
                 sdlist.append('.')
+            elif self.field[self.pos] == '@':
+                # bpo-34155: Don't parse domains with two `@` like
+                # `a@malicious.org@important.com`.
+                return EMPTYSTRING
             elif self.field[self.pos] in self.atomends:
                 break
             else:
--- Python-2.7.16/Lib/email/test/test_email.py
+++ Python-2.7.16/Lib/email/test/test_email.py
@@ -2306,6 +2306,20 @@ class TestMiscellaneous(TestEmailBase):
         self.assertEqual(Utils.parseaddr('<>'), ('', ''))
         self.assertEqual(Utils.formataddr(Utils.parseaddr('<>')), '')
 
+    def test_parseaddr_multiple_domains(self):
+        self.assertEqual(
+            Utils.parseaddr('a@b@c'),
+            ('', '')
+        )
+        self.assertEqual(
+            Utils.parseaddr('a@b.c@c'),
+            ('', '')
+        )
+        self.assertEqual(
+            Utils.parseaddr('a@172.17.0.1@c'),
+            ('', '')
+        )
+
     def test_noquote_dump(self):
         self.assertEqual(
             Utils.formataddr(('A Silly Person', 'person@dom.ain')),
