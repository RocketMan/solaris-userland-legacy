Fixes bug 30503749.

socket.setsockopt sometimes raise Invalid argument error, because of differences
between Linux and Solaris in socket layer. The reason is that the third argument
length is different for the following socket options:

IP_MULTICAST_TTL
IP_MULTICAST_LOOP

An integer is expected on Linux, single byte on Solaris. While this should be
handled in the application code (with pack), we decided to patch this in runtime
rather than in our application code (because upstream is generally aware of this).

See the bug for more information.

--- Python-3.4.10/Modules/socketmodule.c
+++ Python-3.4.10/Modules/socketmodule.c
@@ -2160,6 +2160,11 @@ sock_setsockopt(PySocketSockObject *s, P
                          &level, &optname, &flag)) {
         buf = (char *) &flag;
         buflen = sizeof flag;
+
+        /* Multi cast options take shorter arguments */
+        if (optname == IP_MULTICAST_TTL
+            || optname == IP_MULTICAST_LOOP)
+                buflen = sizeof(u_char);
     }
     else {
         PyErr_Clear();
