Fixes CVE-2019-16935.
Desc:
  The documentation XML-RPC server in Python through 2.7.16, 3.x through
  3.6.9, and 3.7.x through 3.7.4 has XSS via the server_title field. This
  occurs in Lib/DocXMLRPCServer.py in Python 2.x, and in Lib/xmlrpc/server.py
  in Python 3.x. If set_server_title is called with untrusted input,
  arbitrary JavaScript can be delivered to clients that visit the http URL
  for this server.

Upstream bug: https://bugs.python.org/issue38243

Upstream commit:
https://github.com/python/cpython/commit/3fe1b19265b55c290fc956e9aafcf661803782de

--- Python-3.4.10/Lib/test/test_docxmlrpc.py
+++ Python-3.4.10/Lib/test/test_docxmlrpc.py
@@ -1,5 +1,6 @@
 from xmlrpc.server import DocXMLRPCServer
 import http.client
+import re
 import sys
 from test import support
 threading = support.import_module('threading')
@@ -211,6 +212,21 @@ class DocXMLRPCHTTPGETServer(unittest.Te
              b'method_annotation</strong></a>(x: bytes)</dt></dl>'),
             response.read())
 
+    def test_server_title_escape(self):
+        # bpo-38243: Ensure that the server title and documentation
+        # are escaped for HTML.
+        self.serv.set_server_title('test_title<script>')
+        self.serv.set_server_documentation('test_documentation<script>')
+        self.assertEqual('test_title<script>', self.serv.server_title)
+        self.assertEqual('test_documentation<script>',
+                self.serv.server_documentation)
+
+        generated = self.serv.generate_html_documentation()
+        title = re.search(r'<title>(.+?)</title>', generated).group()
+        documentation = re.search(r'<p><tt>(.+?)</tt></p>', generated).group()
+        self.assertEqual('<title>Python: test_title&lt;script&gt;</title>', title)
+        self.assertEqual('<p><tt>test_documentation&lt;script&gt;</tt></p>', documentation)
+
 
 def test_main():
     support.run_unittest(DocXMLRPCHTTPGETServer)
--- Python-3.4.10/Lib/xmlrpc/server.py
+++ Python-3.4.10/Lib/xmlrpc/server.py
@@ -106,6 +106,7 @@ server.handle_request()
 
 from xmlrpc.client import Fault, dumps, loads, gzip_encode, gzip_decode
 from http.server import BaseHTTPRequestHandler
+import html
 import http.server
 import socketserver
 import sys
@@ -887,7 +888,7 @@ class XMLRPCDocGenerator:
                                 methods
                             )
 
-        return documenter.page(self.server_title, documentation)
+        return documenter.page(html.escape(self.server_title), documentation)
 
 class DocXMLRPCRequestHandler(SimpleXMLRPCRequestHandler):
     """XML-RPC and documentation request handler class.
