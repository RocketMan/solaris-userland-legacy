This is a temporary patch for:

31692136 - lpstat hangs with stopped cupsd 

Solaris poll() behaves differently in comparison with Linux. On Solaris
getsockopt() is necessary after poll() to verify the socket is connected and
without errors.

The patch should be removed once the fix gets to the upstream.

--- cups-2.4.0/cups/http-addrlist.c
+++ cups-2.4.0/cups/http-addrlist.c
@@ -316,9 +316,17 @@ http_addrlist_t *connaddr = NULL;	/* Con
 
       for (i = 0; i < nfds; i ++)
       {
+        int		sres, serr;
+        socklen_t	slen = sizeof(serr);
+
+        sres = getsockopt(fds[i], SOL_SOCKET, SO_ERROR, &serr, &slen);
+#  ifdef DEBUG
+	DEBUG_printf(("1httpAddrConnect2: getsockopt res: %d  s_err: %d", sres, serr));
+#  endif
+
 #  ifdef HAVE_POLL
 	DEBUG_printf(("pfds[%d].revents=%x\n", i, pfds[i].revents));
-	if (pfds[i].revents && !(pfds[i].revents & (POLLERR | POLLHUP)))
+	if (pfds[i].revents && !(pfds[i].revents & (POLLERR | POLLHUP)) && !sres && !serr)
 #  else
 	if (FD_ISSET(fds[i], &input_set) && !FD_ISSET(fds[i], &error_set))
 #  endif /* HAVE_POLL */
@@ -335,7 +343,7 @@ #  endif /* DEBUG */
           break;
 	}
 #  ifdef HAVE_POLL
-	else if (pfds[i].revents & (POLLERR | POLLHUP))
+	else if ((pfds[i].revents & (POLLERR | POLLHUP)) || (sres || serr))
 #  else
 	else if (FD_ISSET(fds[i], &error_set))
 #  endif /* HAVE_POLL */
