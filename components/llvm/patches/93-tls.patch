On Solaris 11.3, exporting the TLS variable llvm::parallel::threadIndex
yields the following ld error:

    symbol '_ZN4llvm8parallel11threadIndexE' in file ../../lib/amd64/libLLVM-16.so (STT_TLS), is defined in a non-SHF_TLS section

This patch applies the same strategy as WIN32; namely, it keeps the
TLS variable local and exposes it via a wrapper function.

--- llvm-16.0.6/include/llvm/Support/Parallel.h-	2024-02-09 15:35:53.904897043 +0000
+++ llvm-16.0.6/include/llvm/Support/Parallel.h	2024-02-09 15:37:28.086761136 +0000
@@ -30,7 +30,7 @@
 extern ThreadPoolStrategy strategy;
 
 #if LLVM_ENABLE_THREADS
-#ifdef _WIN32
+#if defined(_WIN32) || defined(__sun)
 // Direct access to thread_local variables from a different DLL isn't
 // possible with Windows Native TLS.
 unsigned getThreadIndex();
--- llvm-16.0.6/lib/Support/Parallel.cpp-	2024-02-09 15:19:12.409676388 +0000
+++ llvm-16.0.6/lib/Support/Parallel.cpp	2024-02-09 15:36:55.336921376 +0000
@@ -23,7 +23,7 @@
 namespace parallel {
 #if LLVM_ENABLE_THREADS
 
-#ifdef _WIN32
+#if defined(_WIN32) || defined(__sun)
 static thread_local unsigned threadIndex;
 
 unsigned getThreadIndex() { return threadIndex; }
