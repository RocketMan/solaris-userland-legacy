Fixes CVE-2020-25219.

url::recvline in url.cpp in libproxy 0.4.x through 0.4.15 allows a remote HTTP
server to trigger uncontrolled recursion via a response composed of an infinite
stream that lacks a newline character. This leads to stack exhaustion.

Upstream reference:
https://github.com/libproxy/libproxy/issues/134
https://github.com/libproxy/libproxy/pull/136

--- libproxy-master/libproxy/url.cpp
+++ libproxy-master/libproxy/url.cpp
@@ -370,16 +370,24 @@ string url::to_string() const {
 	return m_orig;
 }
 
-static inline string recvline(int fd) {
-	// Read a character.
-	// If we don't get a character, return empty string.
-	// If we are at the end of the line, return empty string.
-	char c = '\0';
-	
-	if (recv(fd, &c, 1, 0) != 1 || c == '\n')
-		return "";
-
-	return string(1, c) + recvline(fd);
+static string recvline(int fd) {
+	string line;
+	int ret;
+
+	// Reserve arbitrary amount of space to avoid small memory reallocations.
+	line.reserve(128);
+
+	do {
+		char c;
+		ret = recv(fd, &c, 1, 0);
+		if (ret == 1) {
+			if (c == '\n')
+				return line;
+			line += c;
+		}
+	} while (ret == 1 || (ret == -1 && errno == EINTR));
+
+	return line;
 }
 
 char* url::get_pac() {
