--- samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_karatsuba_mul.c~	2018-01-14 20:41:58.000000000 +0000
+++ samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_karatsuba_mul.c	2018-10-15 16:32:01.246793564 +0000
@@ -60,7 +60,7 @@
 
   /* init copy all the temps */
   if (mp_init_size (&x0, B) != MP_OKAY)
-    goto ERR;
+    goto ERRX;
   if (mp_init_size (&x1, a->used - B) != MP_OKAY)
     goto X0;
   if (mp_init_size (&y0, B) != MP_OKAY)
@@ -157,7 +157,7 @@
 Y0:mp_clear (&y0);
 X1:mp_clear (&x1);
 X0:mp_clear (&x0);
-ERR:
+ERRX:
   return err;
 }
 #endif
--- samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_toom_sqr.c~	2018-01-14 20:41:58.000000000 +0000
+++ samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_toom_sqr.c	2018-10-15 16:32:35.232147415 +0000
@@ -32,76 +32,76 @@
 
     /* a = a2 * B**2 + a1 * B + a0 */
     if ((res = mp_mod_2d(a, DIGIT_BIT * B, &a0)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     if ((res = mp_copy(a, &a1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     mp_rshd(&a1, B);
     mp_mod_2d(&a1, DIGIT_BIT * B, &a1);
 
     if ((res = mp_copy(a, &a2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     mp_rshd(&a2, B*2);
 
     /* w0 = a0*a0 */
     if ((res = mp_sqr(&a0, &w0)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     /* w4 = a2 * a2 */
     if ((res = mp_sqr(&a2, &w4)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     /* w1 = (a2 + 2(a1 + 2a0))**2 */
     if ((res = mp_mul_2(&a0, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp1, &a1, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_mul_2(&tmp1, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp1, &a2, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     if ((res = mp_sqr(&tmp1, &w1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     /* w3 = (a0 + 2(a1 + 2a2))**2 */
     if ((res = mp_mul_2(&a2, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp1, &a1, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_mul_2(&tmp1, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp1, &a0, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     if ((res = mp_sqr(&tmp1, &w3)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
 
     /* w2 = (a2 + a1 + a0)**2 */
     if ((res = mp_add(&a2, &a1, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp1, &a0, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_sqr(&tmp1, &w2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     /* now solve the matrix
@@ -117,104 +117,104 @@
 
      /* r1 - r4 */
      if ((res = mp_sub(&w1, &w4, &w1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3 - r0 */
      if ((res = mp_sub(&w3, &w0, &w3)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r1/2 */
      if ((res = mp_div_2(&w1, &w1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3/2 */
      if ((res = mp_div_2(&w3, &w3)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r2 - r0 - r4 */
      if ((res = mp_sub(&w2, &w0, &w2)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_sub(&w2, &w4, &w2)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r1 - r2 */
      if ((res = mp_sub(&w1, &w2, &w1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3 - r2 */
      if ((res = mp_sub(&w3, &w2, &w3)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r1 - 8r0 */
      if ((res = mp_mul_2d(&w0, 3, &tmp1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_sub(&w1, &tmp1, &w1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3 - 8r4 */
      if ((res = mp_mul_2d(&w4, 3, &tmp1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_sub(&w3, &tmp1, &w3)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* 3r2 - r1 - r3 */
      if ((res = mp_mul_d(&w2, 3, &w2)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_sub(&w2, &w1, &w2)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_sub(&w2, &w3, &w2)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r1 - r2 */
      if ((res = mp_sub(&w1, &w2, &w1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3 - r2 */
      if ((res = mp_sub(&w3, &w2, &w3)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r1/3 */
      if ((res = mp_div_3(&w1, &w1, NULL)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3/3 */
      if ((res = mp_div_3(&w3, &w3, NULL)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
 
      /* at this point shift W[n] by B*n */
      if ((res = mp_lshd(&w1, 1*B)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_lshd(&w2, 2*B)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_lshd(&w3, 3*B)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_lshd(&w4, 4*B)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
 
      if ((res = mp_add(&w0, &w1, b)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_add(&w2, &w3, &tmp1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_add(&w4, &tmp1, &tmp1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_add(&tmp1, b, b)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
 
-ERR:
+ERRX:
      mp_clear_multi(&w0, &w1, &w2, &w3, &w4, &a0, &a1, &a2, &tmp1, NULL);
      return res;
 }
--- samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_reduce_2k_setup_l.c~	2018-01-14 20:41:58.000000000 +0000
+++ samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_reduce_2k_setup_l.c	2018-10-15 16:34:01.263657916 +0000
@@ -26,14 +26,14 @@
    }
 
    if ((res = mp_2expt(&tmp, mp_count_bits(a))) != MP_OKAY) {
-      goto ERR;
+      goto ERRX;
    }
 
    if ((res = s_mp_sub(&tmp, a, d)) != MP_OKAY) {
-      goto ERR;
+      goto ERRX;
    }
 
-ERR:
+ERRX:
    mp_clear(&tmp);
    return res;
 }
--- samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_karatsuba_sqr.c~	2018-01-14 20:41:58.000000000 +0000
+++ samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_karatsuba_sqr.c	2018-10-15 16:31:32.798643996 +0000
@@ -37,7 +37,7 @@
 
   /* init copy all the temps */
   if (mp_init_size (&x0, B) != MP_OKAY)
-    goto ERR;
+    goto ERRX;
   if (mp_init_size (&x1, a->used - B) != MP_OKAY)
     goto X0;
 
@@ -111,7 +111,7 @@
 T1:mp_clear (&t1);
 X1:mp_clear (&x1);
 X0:mp_clear (&x0);
-ERR:
+ERRX:
   return err;
 }
 #endif
--- samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_reduce_2k.c~	2018-01-14 20:41:58.000000000 +0000
+++ samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_reduce_2k.c	2018-10-15 16:35:06.503300785 +0000
@@ -29,19 +29,19 @@
 top:
    /* q = a/2**p, a = a mod 2**p */
    if ((res = mp_div_2d(a, p, &q, a)) != MP_OKAY) {
-      goto ERR;
+      goto ERRX;
    }
 
    if (d != 1) {
       /* q = q * d */
       if ((res = mp_mul_d(&q, d, &q)) != MP_OKAY) {
-         goto ERR;
+         goto ERRX;
       }
    }
 
    /* a = a + q */
    if ((res = s_mp_add(a, &q, a)) != MP_OKAY) {
-      goto ERR;
+      goto ERRX;
    }
 
    if (mp_cmp_mag(a, n) != MP_LT) {
@@ -49,7 +49,7 @@
       goto top;
    }
 
-ERR:
+ERRX:
    mp_clear(&q);
    return res;
 }
--- samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_toom_mul.c~	2018-01-14 20:41:58.000000000 +0000
+++ samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_toom_mul.c	2018-10-15 16:33:05.047610479 +0000
@@ -39,124 +39,124 @@
 
     /* a = a2 * B**2 + a1 * B + a0 */
     if ((res = mp_mod_2d(a, DIGIT_BIT * B, &a0)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     if ((res = mp_copy(a, &a1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     mp_rshd(&a1, B);
     mp_mod_2d(&a1, DIGIT_BIT * B, &a1);
 
     if ((res = mp_copy(a, &a2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     mp_rshd(&a2, B*2);
 
     /* b = b2 * B**2 + b1 * B + b0 */
     if ((res = mp_mod_2d(b, DIGIT_BIT * B, &b0)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     if ((res = mp_copy(b, &b1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     mp_rshd(&b1, B);
     mp_mod_2d(&b1, DIGIT_BIT * B, &b1);
 
     if ((res = mp_copy(b, &b2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     mp_rshd(&b2, B*2);
 
     /* w0 = a0*b0 */
     if ((res = mp_mul(&a0, &b0, &w0)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     /* w4 = a2 * b2 */
     if ((res = mp_mul(&a2, &b2, &w4)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     /* w1 = (a2 + 2(a1 + 2a0))(b2 + 2(b1 + 2b0)) */
     if ((res = mp_mul_2(&a0, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp1, &a1, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_mul_2(&tmp1, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp1, &a2, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     if ((res = mp_mul_2(&b0, &tmp2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp2, &b1, &tmp2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_mul_2(&tmp2, &tmp2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp2, &b2, &tmp2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     if ((res = mp_mul(&tmp1, &tmp2, &w1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     /* w3 = (a0 + 2(a1 + 2a2))(b0 + 2(b1 + 2b2)) */
     if ((res = mp_mul_2(&a2, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp1, &a1, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_mul_2(&tmp1, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp1, &a0, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     if ((res = mp_mul_2(&b2, &tmp2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp2, &b1, &tmp2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_mul_2(&tmp2, &tmp2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp2, &b0, &tmp2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     if ((res = mp_mul(&tmp1, &tmp2, &w3)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
 
     /* w2 = (a2 + a1 + a0)(b2 + b1 + b0) */
     if ((res = mp_add(&a2, &a1, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp1, &a0, &tmp1)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&b2, &b1, &tmp2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_add(&tmp2, &b0, &tmp2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
     if ((res = mp_mul(&tmp1, &tmp2, &w2)) != MP_OKAY) {
-       goto ERR;
+       goto ERRX;
     }
 
     /* now solve the matrix
@@ -173,104 +173,104 @@
 
      /* r1 - r4 */
      if ((res = mp_sub(&w1, &w4, &w1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3 - r0 */
      if ((res = mp_sub(&w3, &w0, &w3)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r1/2 */
      if ((res = mp_div_2(&w1, &w1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3/2 */
      if ((res = mp_div_2(&w3, &w3)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r2 - r0 - r4 */
      if ((res = mp_sub(&w2, &w0, &w2)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_sub(&w2, &w4, &w2)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r1 - r2 */
      if ((res = mp_sub(&w1, &w2, &w1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3 - r2 */
      if ((res = mp_sub(&w3, &w2, &w3)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r1 - 8r0 */
      if ((res = mp_mul_2d(&w0, 3, &tmp1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_sub(&w1, &tmp1, &w1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3 - 8r4 */
      if ((res = mp_mul_2d(&w4, 3, &tmp1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_sub(&w3, &tmp1, &w3)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* 3r2 - r1 - r3 */
      if ((res = mp_mul_d(&w2, 3, &w2)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_sub(&w2, &w1, &w2)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_sub(&w2, &w3, &w2)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r1 - r2 */
      if ((res = mp_sub(&w1, &w2, &w1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3 - r2 */
      if ((res = mp_sub(&w3, &w2, &w3)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r1/3 */
      if ((res = mp_div_3(&w1, &w1, NULL)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      /* r3/3 */
      if ((res = mp_div_3(&w3, &w3, NULL)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
 
      /* at this point shift W[n] by B*n */
      if ((res = mp_lshd(&w1, 1*B)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_lshd(&w2, 2*B)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_lshd(&w3, 3*B)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_lshd(&w4, 4*B)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
 
      if ((res = mp_add(&w0, &w1, c)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_add(&w2, &w3, &tmp1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_add(&w4, &tmp1, &tmp1)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
      if ((res = mp_add(&tmp1, c, c)) != MP_OKAY) {
-        goto ERR;
+        goto ERRX;
      }
 
-ERR:
+ERRX:
      mp_clear_multi(&w0, &w1, &w2, &w3, &w4,
                     &a0, &a1, &a2, &b0, &b1,
                     &b2, &tmp1, &tmp2, NULL);
--- samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_is_square.c~	2018-01-14 20:41:58.000000000 +0000
+++ samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_is_square.c	2018-10-15 16:33:34.705442017 +0000
@@ -75,31 +75,31 @@
      return res;
   }
   if ((res = mp_mod(arg,&t,&t)) != MP_OKAY) {
-     goto ERR;
+     goto ERRX;
   }
   r = mp_get_int(&t);
   /* Check for other prime modules, note it's not an ERROR but we must
-   * free "t" so the easiest way is to goto ERR.  We know that res
+   * free "t" so the easiest way is to goto ERRX.  We know that res
    * is already equal to MP_OKAY from the mp_mod call
    */
-  if ( (1L<<(r%11)) & 0x5C4L )             goto ERR;
-  if ( (1L<<(r%13)) & 0x9E4L )             goto ERR;
-  if ( (1L<<(r%17)) & 0x5CE8L )            goto ERR;
-  if ( (1L<<(r%19)) & 0x4F50CL )           goto ERR;
-  if ( (1L<<(r%23)) & 0x7ACCA0L )          goto ERR;
-  if ( (1L<<(r%29)) & 0xC2EDD0CL )         goto ERR;
-  if ( (1L<<(r%31)) & 0x6DE2B848L )        goto ERR;
+  if ( (1L<<(r%11)) & 0x5C4L )             goto ERRX;
+  if ( (1L<<(r%13)) & 0x9E4L )             goto ERRX;
+  if ( (1L<<(r%17)) & 0x5CE8L )            goto ERRX;
+  if ( (1L<<(r%19)) & 0x4F50CL )           goto ERRX;
+  if ( (1L<<(r%23)) & 0x7ACCA0L )          goto ERRX;
+  if ( (1L<<(r%29)) & 0xC2EDD0CL )         goto ERRX;
+  if ( (1L<<(r%31)) & 0x6DE2B848L )        goto ERRX;
 
   /* Final check - is sqr(sqrt(arg)) == arg ? */
   if ((res = mp_sqrt(arg,&t)) != MP_OKAY) {
-     goto ERR;
+     goto ERRX;
   }
   if ((res = mp_sqr(&t,&t)) != MP_OKAY) {
-     goto ERR;
+     goto ERRX;
   }
 
   *ret = (mp_cmp_mag(&t,arg) == MP_EQ) ? MP_YES : MP_NO;
-ERR:mp_clear(&t);
+ERRX:mp_clear(&t);
   return res;
 }
 #endif
--- samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_reduce_2k_l.c~	2018-01-14 20:41:58.000000000 +0000
+++ samba-4.8.4/source4/heimdal/lib/hcrypto/libtommath/bn_mp_reduce_2k_l.c	2018-10-15 16:34:34.946402951 +0000
@@ -32,17 +32,17 @@
 top:
    /* q = a/2**p, a = a mod 2**p */
    if ((res = mp_div_2d(a, p, &q, a)) != MP_OKAY) {
-      goto ERR;
+      goto ERRX;
    }
 
    /* q = q * d */
    if ((res = mp_mul(&q, d, &q)) != MP_OKAY) {
-      goto ERR;
+      goto ERRX;
    }
 
    /* a = a + q */
    if ((res = s_mp_add(a, &q, a)) != MP_OKAY) {
-      goto ERR;
+      goto ERRX;
    }
 
    if (mp_cmp_mag(a, n) != MP_LT) {
@@ -50,7 +50,7 @@
       goto top;
    }
 
-ERR:
+ERRX:
    mp_clear(&q);
    return res;
 }
