from https://github.com/libgd/libgd/commit/0be86e1926939a98afbd2f3a23c673dfc4df2a7c
and https://github.com/libgd/libgd/commit/2dbd8f6e66b73ed43d9b81a45350922b80f75397
small changes in tests/gd/CMakeLists.txt and tests/gd/Makemodule.am
to make them apply

From 0be86e1926939a98afbd2f3a23c673dfc4df2a7c Mon Sep 17 00:00:00 2001
From: Mike Frysinger <vapier@gentoo.org>
Date: Wed, 31 Jan 2018 14:50:16 -0500
Subject: [PATCH] gd/gd2: make sure transparent palette index is within bounds
 #383

The gd image formats allow for a palette of 256 colors,
so if the transparent index is out of range, disable it.
---
 src/gd_gd.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/gd_gd.c b/src/gd_gd.c
index 60cfa958..3915338d 100644
--- src/gd_gd.c
+++ src/gd_gd.c
@@ -108,7 +108,8 @@ _gdGetColors (gdIOCtx * in, gdImagePtr im, int gd2xFlag)
 		if (!gdGetWord (&im->transparent, in)) {
 			goto fail1;
 		}
-		if (im->transparent == 257) {
+		/* Make sure transparent index is within bounds of the palette. */
+		if (im->transparent >= 256 || im->transparent < 0) {
 			im->transparent = (-1);
 		}
 	}
From 2dbd8f6e66b73ed43d9b81a45350922b80f75397 Mon Sep 17 00:00:00 2001
From: "Christoph M. Becker" <cmbecker69@gmx.de>
Date: Sat, 3 Feb 2018 18:31:16 +0100
Subject: [PATCH] Fix #383 (amendment)

When reading images in GD or GD2 format, we have to ensure that the
transparent color is not set, if it would refer to a non-extant palette
entry.

We back that up with respective regression tests.
---
 src/gd_gd.c              |   8 ++++----
 tests/gd/.gitignore      |   1 +
 tests/gd/CMakeLists.txt  |   1 +
 tests/gd/Makemodule.am   |   1 +
 tests/gd/bug00383.c      |  32 ++++++++++++++++++++++++++++++++
 tests/gd/bug00383.gd     | Bin 0 -> 1101 bytes
 tests/gd2/.gitignore     |   1 +
 tests/gd2/CMakeLists.txt |   1 +
 tests/gd2/Makemodule.am  |   1 +
 tests/gd2/bug00383.c     |  32 ++++++++++++++++++++++++++++++++
 tests/gd2/bug00383.gd2   | Bin 0 -> 1113 bytes
 11 files changed, 74 insertions(+), 4 deletions(-)
 create mode 100644 tests/gd/bug00383.c
 create mode 100644 tests/gd/bug00383.gd
 create mode 100644 tests/gd2/bug00383.c
 create mode 100644 tests/gd2/bug00383.gd2

diff --git a/src/gd_gd.c b/src/gd_gd.c
index 3915338d..78fbdb75 100644
--- src/gd_gd.c
+++ src/gd_gd.c
@@ -108,10 +108,10 @@ _gdGetColors (gdIOCtx * in, gdImagePtr im, int gd2xFlag)
 		if (!gdGetWord (&im->transparent, in)) {
 			goto fail1;
 		}
-		/* Make sure transparent index is within bounds of the palette. */
-		if (im->transparent >= 256 || im->transparent < 0) {
-			im->transparent = (-1);
-		}
+	}
+	/* Make sure transparent index is within bounds of the palette. */
+	if (!(im->trueColor) && (im->transparent >= im->colorsTotal || im->transparent < 0)) {
+		im->transparent = (-1);
 	}
 	GD2_DBG (printf
 	         ("Palette had %d colours (T=%d)\n", im->colorsTotal,
diff --git a/tests/gd/.gitignore b/tests/gd/.gitignore
index 5edc65c7..8a7d2847 100644
--- tests/gd/.gitignore
+++ tests/gd/.gitignore
@@ -1,3 +1,4 @@
+/bug00383
 /gd_im2im
 /gd_null
 /gd_num_colors
diff --git a/tests/gd/bug00383.c b/tests/gd/bug00383.c
new file mode 100644
index 00000000..a63ba559
--- /dev/null
+++ tests/gd/bug00383.c
@@ -0,0 +1,32 @@
+/**
+ * Test that invalid transparent colors can't be read
+ * 
+ * We're reading a corrupt palette image in GD format, which has only a single
+ * palette entry, but claims that the transparent color would be 1.  We check
+ * that the transparency is simply ignored in this case.
+ * 
+ * See also <https://github.com/libgd/libgd/issues/383>
+ */
+
+
+#include "gd.h"
+#include "gdtest.h"
+
+
+int main()
+{
+    gdImagePtr im;
+    FILE *fp;
+
+    fp = gdTestFileOpen2("gd", "bug00383.gd");
+    gdTestAssert(fp != NULL);
+    im = gdImageCreateFromGd(fp);
+    gdTestAssert(im != NULL);
+    fclose(fp);
+
+    gdTestAssert(gdImageGetTransparent(im) == -1);
+
+    gdImageDestroy(im);
+
+    return gdNumFailures();
+}
diff --git a/tests/gd2/.gitignore b/tests/gd2/.gitignore
index 0903dd52..ac130333 100644
--- tests/gd2/.gitignore
+++ tests/gd2/.gitignore
@@ -2,6 +2,7 @@
 /bug00209
 /bug00309
 /bug00354
+/bug00383
 /gd2_empty_file
 /gd2_im2im
 /gd2_null
diff --git a/tests/gd2/CMakeLists.txt b/tests/gd2/CMakeLists.txt
index 785244fe..6639b7e9 100644
--- tests/gd2/CMakeLists.txt
+++ tests/gd2/CMakeLists.txt
@@ -5,6 +5,7 @@ LIST(APPEND TESTS_FILES
 	bug00209
 	bug00309
 	bug00354
+	bug00383
 	gd2_empty_file
 	php_bug_72339
 	gd2_null
diff --git a/tests/gd2/Makemodule.am b/tests/gd2/Makemodule.am
index 494a7c79..42bc62b9 100644
--- tests/gd2/Makemodule.am
+++ tests/gd2/Makemodule.am
@@ -5,6 +5,7 @@ libgd_test_programs += \
 	gd2/bug00209 \
 	gd2/bug00309 \
 	gd2/bug00354 \
+	gd2/bug00383 \
 	gd2/gd2_empty_file \
 	gd2/php_bug_72339 \
 	gd2/gd2_null \
diff --git a/tests/gd2/bug00383.c b/tests/gd2/bug00383.c
new file mode 100644
index 00000000..0f11855b
--- /dev/null
+++ tests/gd2/bug00383.c
@@ -0,0 +1,32 @@
+/**
+ * Test that invalid transparent colors can't be read
+ * 
+ * We're reading a corrupt palette image in GD2 format, which has only a single
+ * palette entry, but claims that the transparent color would be 1.  We check
+ * that the transparency is simply ignored in this case.
+ * 
+ * See also <https://github.com/libgd/libgd/issues/383>
+ */
+
+
+#include "gd.h"
+#include "gdtest.h"
+
+
+int main()
+{
+    gdImagePtr im;
+    FILE *fp;
+
+    fp = gdTestFileOpen2("gd2", "bug00383.gd2");
+    gdTestAssert(fp != NULL);
+    im = gdImageCreateFromGd2(fp);
+    gdTestAssert(im != NULL);
+    fclose(fp);
+
+    gdTestAssert(gdImageGetTransparent(im) == -1);
+
+    gdImageDestroy(im);
+
+    return gdNumFailures();
+}
diff --git a/tests/gd/CMakeLists.txt b/tests/gd/CMakeLists.txt
--- tests/gd/CMakeLists.txt
+++ tests/gd/CMakeLists.txt
@@ -1,4 +1,5 @@
 LIST(APPEND TESTS_FILES
+	bug00383
 	gd_null
 	gd_num_colors
 	gd_versiontest
diff --git a/tests/gd/Makemodule.am b/tests/gd/Makemodule.am
--- tests/gd/Makemodule.am
+++ tests/gd/Makemodule.am
@@ -1,4 +1,5 @@
 libgd_test_programs += \
+	gd/bug00383 \
 	gd/gd_null \
 	gd/gd_num_colors \
 	gd/gd_versiontest
