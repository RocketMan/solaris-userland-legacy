based on https://gitlab.com/libidn/libidn2/commit/241e8f486134793cb0f4a5b0e5817a97883401f5
From 241e8f486134793cb0f4a5b0e5817a97883401f5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tim=20R=C3=BChsen?= <tim.ruehsen@gmx.de>
Date: Tue, 9 Apr 2019 16:58:18 +0200
Subject: [PATCH] Perform A-Label roundtrip for lookup functions by default

This adds another check to avoid unexpected results.
It was a longstanding FIXME.

Thanks to  Jonathan Birch of Microsoft Corporation,
Florian Weimer (GNU glibc) and Nikos Mavrogiannopoulos (GnuTLS)
for investigation, discussion and testing.
---
 lib/error.c   |   2 +
 lib/idn2.h.in |  12 ++++--
 lib/lookup.c  | 105 +++++++++++++++++++++++++++++++++++---------------
 src/blurbs.h  |   4 +-
 src/idn2.c    |  32 ++++++++-------
 src/idn2.ggo  |   1 +
 6 files changed, 105 insertions(+), 51 deletions(-)

diff --git a/lib/error.c b/lib/error.c
index 0304044e..8483f301 100644
--- a/lib/error.c
+++ b/lib/error.c
@@ -148,6 +148,8 @@
       p = _("string has forbidden bi-directional properties");
       break;
 
+    case IDN2_ALABEL_ROUNDTRIP_FAILED: return _("Alabel roundtrip failed");
+
     default:
       p = _("Unknown error");
       break;
@@ -274,6 +276,8 @@
       p = ERR2STR (IDN2_BIDI);
       break;
 
+    case IDN2_ALABEL_ROUNDTRIP_FAILED: return ERR2STR (IDN2_ALABEL_ROUNDTRIP_FAILED);
+
     default:
       p = "IDN2_UNKNOWN";
       break;
diff --git a/lib/idn2.h.in b/lib/idn2.h.in
index 695662b1..c7835b09 100644
--- a/lib/idn2.h.in
+++ b/lib/idn2.h.in
@@ -150,9 +150,11 @@
 /**
  * idn2_flags:
  * @IDN2_NFC_INPUT: Normalize input string using normalization form C.
- * @IDN2_ALABEL_ROUNDTRIP: Perform optional IDNA2008 lookup roundtrip check (not implemented yet).
+ * @IDN2_ALABEL_ROUNDTRIP: Perform optional IDNA2008 lookup roundtrip check (default).
+ * @IDN2_NO_ALABEL_ROUNDTRIP: Disable ALabel lookup roundtrip check.
+ * @IDN2_NO_TR46: Disable Unicode TR46 processing.
  * @IDN2_TRANSITIONAL: Perform Unicode TR46 transitional processing.
- * @IDN2_NONTRANSITIONAL: Perform Unicode TR46 non-transitional processing.
+ * @IDN2_NONTRANSITIONAL: Perform Unicode TR46 non-transitional processing. (default)
  * @IDN2_ALLOW_UNASSIGNED: Libidn compatibility flag, unused.
  * @IDN2_USE_STD3_ASCII_RULES: Use STD3 ASCII rules.
  * This is a #TR46 only flag, and will be ignored when set without either
@@ -169,6 +171,8 @@
     IDN2_NONTRANSITIONAL = 8,
     IDN2_ALLOW_UNASSIGNED = 16,
     IDN2_USE_STD3_ASCII_RULES = 32,
+    IDN2_NO_TR46 = 64,
+    IDN2_NO_ALABEL_ROUNDTRIP = 128
   } idn2_flags;
 
 /* IDNA2008 with UTF-8 encoded inputs. */
@@ -219,6 +223,7 @@
  * @IDN2_DOT_IN_LABEL: Label has forbidden dot (TR46).
  * @IDN2_INVALID_TRANSITIONAL: Label has character forbidden in transitional mode (TR46).
  * @IDN2_INVALID_NONTRANSITIONAL: Label has character forbidden in non-transitional mode (TR46).
+ * @IDN2_ALABEL_ROUNDTRIP_FAILED: ALabel -> Ulabel -> ALabel result differs from input.
  *
  * Return codes for IDN2 functions.  All return codes are negative
  * except for the successful code IDN2_OK which are guaranteed to be
@@ -257,6 +262,7 @@
     IDN2_DOT_IN_LABEL = -311,
     IDN2_INVALID_TRANSITIONAL = -312,
     IDN2_INVALID_NONTRANSITIONAL = -313,
+    IDN2_ALABEL_ROUNDTRIP_FAILED = -314,
   } idn2_rc;
 
 /* Auxilliary functions. */
diff --git a/lib/lookup.c b/lib/lookup.c
index 0342ee5b..1dd0e971 100644
--- a/lib/lookup.c
+++ b/lib/lookup.c
@@ -49,23 +49,39 @@
 {
   size_t plen;
   uint32_t *p;
-  int rc;
-  size_t tmpl;
+  const uint8_t *src_org = NULL;
+  uint8_t *src_allocated = NULL;
+  int rc, check_roundtrip = 0;
+  size_t tmpl, srclen_org = 0;
+  uint32_t label_u32[IDN2_LABEL_MAX_LENGTH];
+  size_t label32_len = IDN2_LABEL_MAX_LENGTH;
 
-  if (_idn2_ascii_p (src, srclen))
-    {
-      if (flags & IDN2_ALABEL_ROUNDTRIP)
-	/* FIXME implement this MAY:
+  if (_idn2_ascii_p (src, srclen)) {
+    if (!(flags & IDN2_NO_ALABEL_ROUNDTRIP) && srclen >= 4 && memcmp (src, "xn--", 4) == 0) {
+      /*
+	 If the input to this procedure appears to be an A-label
+	 (i.e., it starts in "xn--", interpreted
+	 case-insensitively), the lookup application MAY attempt to
+	 convert it to a U-label, first ensuring that the A-label is
+	 entirely in lowercase (converting it to lowercase if
+	 necessary), and apply the tests of Section 5.4 and the
+	 conversion of Section 5.5 to that form. */
+      rc = _idn2_punycode_decode (srclen - 4, (char *) src + 4, &label32_len, label_u32);
+      if (rc)
+	return rc;
 
-	   If the input to this procedure appears to be an A-label
-	   (i.e., it starts in "xn--", interpreted
-	   case-insensitively), the lookup application MAY attempt to
-	   convert it to a U-label, first ensuring that the A-label is
-	   entirely in lowercase (converting it to lowercase if
-	   necessary), and apply the tests of Section 5.4 and the
-	   conversion of Section 5.5 to that form. */
-	return IDN2_INVALID_FLAGS;
+      check_roundtrip = 1;
+      src_org = src;
+      srclen_org = srclen;
 
+      srclen = IDN2_LABEL_MAX_LENGTH;
+      src = src_allocated = u32_to_u8 (label_u32, label32_len, NULL, &srclen);
+      if (!src) {
+	if (errno == ENOMEM)
+	  return IDN2_MALLOC;
+	return IDN2_ENCODING_ERROR;
+      }
+    } else {
       if (srclen > IDN2_LABEL_MAX_LENGTH)
 	return IDN2_TOO_BIG_LABEL;
       if (srclen > *dstlen)
@@ -75,10 +91,11 @@
       *dstlen = srclen;
       return IDN2_OK;
     }
+  }
 
   rc = _idn2_u8_to_u32_nfc (src, srclen, &p, &plen, flags & IDN2_NFC_INPUT);
   if (rc != IDN2_OK)
-    return rc;
+    goto out;
 
   if (!(flags & IDN2_TRANSITIONAL))
     {
@@ -93,8 +110,8 @@
 
       if (rc != IDN2_OK)
 	{
-	  free(p);
-	  return rc;
+	  free (p);
+	  goto out;
 	}
     }
 
@@ -107,11 +124,25 @@
   rc = _idn2_punycode_encode (plen, p, &tmpl, (char *) dst + 4);
   free (p);
   if (rc != IDN2_OK)
-    return rc;
+    goto out;
 
+
   *dstlen = 4 + tmpl;
 
-  return IDN2_OK;
+  if (check_roundtrip)
+    {
+      if (srclen_org != *dstlen || memcmp (src_org, dst, srclen_org))
+      {
+        rc = IDN2_ALABEL_ROUNDTRIP_FAILED;
+	goto out;
+      }
+    }
+
+  rc = IDN2_OK;
+
+out:
+  free (src_allocated);
+  return rc;
 }
 
 #define TR46_TRANSITIONAL_CHECK \
@@ -354,14 +385,18 @@
  * Pass %IDN2_NFC_INPUT in @flags to convert input to NFC form before
  * further processing.  %IDN2_TRANSITIONAL and %IDN2_NONTRANSITIONAL
  * do already imply %IDN2_NFC_INPUT.
+ *
  * Pass %IDN2_ALABEL_ROUNDTRIP in @flags to
  * convert any input A-labels to U-labels and perform additional
- * testing (not implemented yet).
+ * testing. This is default since version 2.2.
+ * To switch this behavior off, pass IDN2_NO_ALABEL_ROUNDTRIP
+ *
  * Pass %IDN2_TRANSITIONAL to enable Unicode TR46
  * transitional processing, and %IDN2_NONTRANSITIONAL to enable
- * Unicode TR46 non-transitional processing.  Multiple flags may be
- * specified by binary or:ing them together.
+ * Unicode TR46 non-transitional processing.
  *
+ * Multiple flags may be specified by binary or:ing them together.
+ *
  * After version 2.0.3: %IDN2_USE_STD3_ASCII_RULES disabled by default.
  * Previously we were eliminating non-STD3 characters from domain strings
  * such as _443._tcp.example.com, or IPs 1.2.3.4/24 provided to libidn2
@@ -398,6 +433,10 @@
       (IDN2_TRANSITIONAL | IDN2_NONTRANSITIONAL))
     return IDN2_INVALID_FLAGS;
 
+  if ((flags & (IDN2_ALABEL_ROUNDTRIP | IDN2_NO_ALABEL_ROUNDTRIP)) ==
+      (IDN2_ALABEL_ROUNDTRIP | IDN2_NO_ALABEL_ROUNDTRIP))
+    return IDN2_INVALID_FLAGS;
+
   if (flags & IDN2_TRANSITIONAL)
     tr46_mode = IDN2_TRANSITIONAL;
   else if (flags & IDN2_NONTRANSITIONAL)
@@ -483,15 +522,20 @@
  * to be encoded in the locale's default coding system, and will be
  * transcoded to UTF-8 and NFC normalized by this function.
  *
- * Pass %IDN2_ALABEL_ROUNDTRIP in @flags to convert any input A-labels
- * to U-labels and perform additional testing.  Pass
- * %IDN2_TRANSITIONAL to enable Unicode TR46 transitional processing,
+ * Pass %IDN2_ALABEL_ROUNDTRIP in @flags to
+ * convert any input A-labels to U-labels and perform additional
+ * testing. This is default since version 2.2.
+ * To switch this behavior off, pass IDN2_NO_ALABEL_ROUNDTRIP
+ *
+ * Pass %IDN2_TRANSITIONAL to enable Unicode TR46 transitional processing,
  * and %IDN2_NONTRANSITIONAL to enable Unicode TR46 non-transitional
- * processing.  Multiple flags may be specified by binary or:ing them
- * together, for example %IDN2_ALABEL_ROUNDTRIP |
- * %IDN2_NONTRANSITIONAL.  The %IDN2_NFC_INPUT in @flags is always
- * enabled in this function.
+ * processing.
  *
+ * Multiple flags may be specified by binary or:ing them together, for
+ * example %IDN2_ALABEL_ROUNDTRIP | %IDN2_NONTRANSITIONAL.
+ *
+ * The %IDN2_NFC_INPUT in @flags is always enabled in this function.
+ *
  * After version 0.11: @lookupname may be NULL to test lookup of @src
  * without allocating memory.
  *
diff --git a/src/blurbs.h b/src/blurbs.h
index 2d71ed0c..4fdea0fe 100644
--- a/src/blurbs.h
+++ b/src/blurbs.h
@@ -1,5 +1,5 @@
 /* blurbs.h - warranty and conditions blurbs
-   Copyright (C) 2011-2017 Simon Josefsson
+   Copyright (C) 2011-2019 Simon Josefsson, Tim Ruehsen
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -16,7 +16,7 @@
 */
 
 #define GREETING							\
-  "Copyright (C) 2011-2017  Simon Josefsson\n"				\
+  "Copyright (C) 2011-2019  Simon Josefsson, Tim Ruehsen\n"				\
   "This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n" \
   "This is free software, and you are welcome to redistribute it\n"	\
   "under certain conditions; type `show c' for details.\n\n"
diff --git a/src/idn2.c b/src/idn2.c
index b13ecad5..c890d8e8 100644
--- a/src/idn2.c
+++ b/src/idn2.c
@@ -1,5 +1,5 @@
 /* idn2.c - command line interface to libidn2
-   Copyright (C) 2011-2017 Simon Josefsson
+   Copyright (C) 2011-2019 Simon Josefsson, Tim Ruehsen
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -50,7 +50,7 @@
   /* Do *not* mark this string for translation.  %s is a copyright
      symbol suitable for this locale, and %d is the copyright
      year.  */
-  "Copyright %s %d Simon Josefsson.";
+  "Copyright 2011-%s %d Simon Josefsson, Tim Ruehsen.";
 
 static void
 usage (int status)
@@ -93,6 +93,7 @@
 "), stdout);
       fputs (_("\
       --nostd3asciirules   Disable STD3 ASCII rules\n\
+      --no-alabelroundtrip Disable ALabel rountrip for lookups\n\
       --debug              Print debugging information\n\
       --quiet              Silent operation\n\
 "), stdout);
@@ -200,7 +201,7 @@
   if (args_info.version_given)
     {
       version_etc (stdout, "idn2", PACKAGE_NAME, VERSION,
-		   "Simon Josefsson", (char *) NULL);
+		   "Simon Josefsson, Tim Ruehsen", (char *) NULL);
       return EXIT_SUCCESS;
     }
 
@@ -229,6 +230,9 @@
   if (flags && args_info.usestd3asciirules_given)
     flags |= IDN2_USE_STD3_ASCII_RULES;
 
+  if (flags && args_info.no_alabelroundtrip_given)
+    flags |= IDN2_NO_ALABEL_ROUNDTRIP;
+
   for (cmdn = 0; cmdn < args_info.inputs_num; cmdn++)
     process_input (args_info.inputs[cmdn], flags | IDN2_NFC_INPUT);
 

--- libidn2-2.0.4/lib/idn2.h.orig	2019-10-31 14:46:08.286211704 +0100
+++ libidn2-2.0.4/lib/idn2.h	2019-10-31 14:46:17.729185024 +0100
@@ -150,9 +150,11 @@
 /**
  * idn2_flags:
  * @IDN2_NFC_INPUT: Normalize input string using normalization form C.
- * @IDN2_ALABEL_ROUNDTRIP: Perform optional IDNA2008 lookup roundtrip check (not implemented yet).
+ * @IDN2_ALABEL_ROUNDTRIP: Perform optional IDNA2008 lookup roundtrip check (default).
+ * @IDN2_NO_ALABEL_ROUNDTRIP: Disable ALabel lookup roundtrip check.
+ * @IDN2_NO_TR46: Disable Unicode TR46 processing.
  * @IDN2_TRANSITIONAL: Perform Unicode TR46 transitional processing.
- * @IDN2_NONTRANSITIONAL: Perform Unicode TR46 non-transitional processing.
+ * @IDN2_NONTRANSITIONAL: Perform Unicode TR46 non-transitional processing. (default)
  * @IDN2_ALLOW_UNASSIGNED: Libidn compatibility flag, unused.
  * @IDN2_USE_STD3_ASCII_RULES: Use STD3 ASCII rules.
  * This is a #TR46 only flag, and will be ignored when set without either
@@ -169,6 +171,8 @@
     IDN2_NONTRANSITIONAL = 8,
     IDN2_ALLOW_UNASSIGNED = 16,
     IDN2_USE_STD3_ASCII_RULES = 32,
+    IDN2_NO_TR46 = 64,
+    IDN2_NO_ALABEL_ROUNDTRIP = 128
   } idn2_flags;
 
 /* IDNA2008 with UTF-8 encoded inputs. */
@@ -219,6 +223,7 @@
  * @IDN2_DOT_IN_LABEL: Label has forbidden dot (TR46).
  * @IDN2_INVALID_TRANSITIONAL: Label has character forbidden in transitional mode (TR46).
  * @IDN2_INVALID_NONTRANSITIONAL: Label has character forbidden in non-transitional mode (TR46).
+ * @IDN2_ALABEL_ROUNDTRIP_FAILED: ALabel -> Ulabel -> ALabel result differs from input.
  *
  * Return codes for IDN2 functions.  All return codes are negative
  * except for the successful code IDN2_OK which are guaranteed to be
@@ -257,6 +262,7 @@
     IDN2_DOT_IN_LABEL = -311,
     IDN2_INVALID_TRANSITIONAL = -312,
     IDN2_INVALID_NONTRANSITIONAL = -313,
+    IDN2_ALABEL_ROUNDTRIP_FAILED = -314,
   } idn2_rc;
 
 /* Auxilliary functions. */
--- a/src/idn2_cmd.c	2017-07-21 15:43:42.000000000 +0200
+++ b/src/idn2_cmd.c	2019-04-15 10:01:38.000000000 +0200
@@ -34,17 +34,18 @@
 const char *gengetopt_args_info_description = "";
 
 const char *gengetopt_args_info_help[] = {
-  "  -h, --help               Print help and exit",
-  "  -V, --version            Print version and exit",
-  "  -d, --decode             Decode (punycode) domain name",
-  "  -l, --lookup             Lookup domain name (default)",
-  "  -r, --register           Register label",
-  "  -T, --tr46t              Enable TR46 transitional processing  (default=off)",
-  "  -N, --tr46nt             Enable TR46 non-transitional processing\n                             (default=off)",
-  "      --no-tr46            Disable TR46 processing  (default=off)",
-  "      --usestd3asciirules  Enable STD3 ASCII rules  (default=off)",
-  "      --debug              Print debugging information  (default=off)",
-  "      --quiet              Silent operation  (default=off)",
+  "  -h, --help                Print help and exit",
+  "  -V, --version             Print version and exit",
+  "  -d, --decode              Decode (punycode) domain name",
+  "  -l, --lookup              Lookup domain name (default)",
+  "  -r, --register            Register label",
+  "  -T, --tr46t               Enable TR46 transitional processing  (default=off)",
+  "  -N, --tr46nt              Enable TR46 non-transitional processing\n                              (default=off)",
+  "      --no-tr46             Disable TR46 processing  (default=off)",
+  "      --usestd3asciirules   Enable STD3 ASCII rules  (default=off)",
+  "      --no-alabelroundtrip  Disable ALabel roundtrip for lookups  (default=off)",
+  "      --debug               Print debugging information  (default=off)",
+  "      --quiet               Silent operation  (default=off)",
     0
 };
 
@@ -77,6 +78,7 @@
   args_info->tr46nt_given = 0 ;
   args_info->no_tr46_given = 0 ;
   args_info->usestd3asciirules_given = 0 ;
+  args_info->no_alabelroundtrip_given = 0 ;
   args_info->debug_given = 0 ;
   args_info->quiet_given = 0 ;
 }
@@ -89,6 +91,7 @@
   args_info->tr46nt_flag = 0;
   args_info->no_tr46_flag = 0;
   args_info->usestd3asciirules_flag = 0;
+  args_info->no_alabelroundtrip_flag = 0;
   args_info->debug_flag = 0;
   args_info->quiet_flag = 0;
   
@@ -108,8 +111,9 @@
   args_info->tr46nt_help = gengetopt_args_info_help[6] ;
   args_info->no_tr46_help = gengetopt_args_info_help[7] ;
   args_info->usestd3asciirules_help = gengetopt_args_info_help[8] ;
-  args_info->debug_help = gengetopt_args_info_help[9] ;
-  args_info->quiet_help = gengetopt_args_info_help[10] ;
+  args_info->no_alabelroundtrip_help = gengetopt_args_info_help[9] ;
+  args_info->debug_help = gengetopt_args_info_help[10] ;
+  args_info->quiet_help = gengetopt_args_info_help[11] ;
   
 }
 
@@ -240,6 +244,8 @@
     write_into_file(outfile, "no-tr46", 0, 0 );
   if (args_info->usestd3asciirules_given)
     write_into_file(outfile, "usestd3asciirules", 0, 0 );
+  if (args_info->no_alabelroundtrip_given)
+    write_into_file(outfile, "no-alabelroundtrip", 0, 0 );
   if (args_info->debug_given)
     write_into_file(outfile, "debug", 0, 0 );
   if (args_info->quiet_given)
@@ -484,6 +490,7 @@
         { "tr46nt",	0, NULL, 'N' },
         { "no-tr46",	0, NULL, 0 },
         { "usestd3asciirules",	0, NULL, 0 },
+        { "no-alabelroundtrip",	0, NULL, 0 },
         { "debug",	0, NULL, 0 },
         { "quiet",	0, NULL, 0 },
         { 0,  0, 0, 0 }
@@ -603,6 +610,18 @@
                 check_ambiguity, override, 1, 0, "usestd3asciirules", '-',
                 additional_error))
               goto failure;
+          
+          }
+          /* Disable ALabel roundtrip for lookups.  */
+          else if (strcmp (long_options[option_index].name, "no-alabelroundtrip") == 0)
+          {
+          
+          
+            if (update_arg((void *)&(args_info->no_alabelroundtrip_flag), 0, &(args_info->no_alabelroundtrip_given),
+                &(local_args_info.no_alabelroundtrip_given), optarg, 0, 0, ARG_FLAG,
+                check_ambiguity, override, 1, 0, "no-alabelroundtrip", '-',
+                additional_error))
+              goto failure;
           
           }
           /* Print debugging information.  */
--- a/src/idn2_cmd.h	2017-07-21 15:43:42.000000000 +0200
+++ b/src/idn2_cmd.h	2019-04-15 10:01:38.000000000 +0200
@@ -50,6 +50,8 @@
   const char *no_tr46_help; /**< @brief Disable TR46 processing help description.  */
   int usestd3asciirules_flag;	/**< @brief Enable STD3 ASCII rules (default=off).  */
   const char *usestd3asciirules_help; /**< @brief Enable STD3 ASCII rules help description.  */
+  int no_alabelroundtrip_flag;	/**< @brief Disable ALabel roundtrip for lookups (default=off).  */
+  const char *no_alabelroundtrip_help; /**< @brief Disable ALabel roundtrip for lookups help description.  */
   int debug_flag;	/**< @brief Print debugging information (default=off).  */
   const char *debug_help; /**< @brief Print debugging information help description.  */
   int quiet_flag;	/**< @brief Silent operation (default=off).  */
@@ -64,6 +66,7 @@
   unsigned int tr46nt_given ;	/**< @brief Whether tr46nt was given.  */
   unsigned int no_tr46_given ;	/**< @brief Whether no-tr46 was given.  */
   unsigned int usestd3asciirules_given ;	/**< @brief Whether usestd3asciirules was given.  */
+  unsigned int no_alabelroundtrip_given ;	/**< @brief Whether no-alabelroundtrip was given.  */
   unsigned int debug_given ;	/**< @brief Whether debug was given.  */
   unsigned int quiet_given ;	/**< @brief Whether quiet was given.  */
 
