#
# Copyright (c) 2014, 2023, Oracle and/or its affiliates.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
#

# Functions which are allowed to be unresolved when building libdricore

$mapfile_version 2

SYMBOL_SCOPE {
  global:
	_glapi_add_dispatch     	{ TYPE = FUNCTION ; FLAGS = extern };
	_glapi_get_dispatch            	{ TYPE = FUNCTION ; FLAGS = extern };
	_glapi_get_context         	{ TYPE = FUNCTION ; FLAGS = extern };
	_glapi_set_context              { TYPE = FUNCTION ; FLAGS = extern };
	_glapi_Dispatch                 { TYPE = DATA     ; FLAGS = extern };
	_glapi_set_dispatch             { TYPE = FUNCTION ; FLAGS = extern };
	_glapi_Context                  { TYPE = DATA     ; FLAGS = extern };
	_glapi_get_dispatch_table_size 	{ TYPE = FUNCTION ; FLAGS = extern };
	_glthread_GetID		 	{ TYPE = FUNCTION ; FLAGS = extern };
	_glapi_check_multithread	{ TYPE = FUNCTION ; FLAGS = extern };
	_glapi_tls_Context              { TYPE = FUNCTION ; FLAGS = extern };
	_glapi_tls_Dispatch             { TYPE = FUNCTION ; FLAGS = extern };
};
