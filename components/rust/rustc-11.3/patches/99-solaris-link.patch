--- rustc-1.50.0-src/library/std/src/sys/unix/mod.rs	2021-02-10 17:36:44.000000000 +0000
+++ rustc-1.50.0-src/library/std/src/sys/unix/mod.rs	2021-03-05 15:47:24.847514661 +0000
@@ -259,6 +259,7 @@
         #[link(name = "posix4")]
         #[link(name = "pthread")]
         #[link(name = "resolv")]
+        #[link(name = "nsl")]
         extern "C" {}
     } else if #[cfg(target_os = "illumos")] {
         #[link(name = "socket")]
--- rustc-1.66.0-src/compiler/rustc_target/src/spec/base/solaris.rs	2022-12-12 16:02:12.000000000 +0000
+++ rustc-1.66.0-src/compiler/rustc_target/src/spec/base/solaris.rs	2022-12-15 19:02:18.783814001 +0000
@@ -1,6 +1,23 @@
-use crate::spec::{cvs, Cc, LinkerFlavor, TargetOptions};
+use crate::spec::{LinkArgs, FramePointer, cvs, Cc, LinkerFlavor, TargetOptions};
 
 pub fn opts() -> TargetOptions {
+    let mut late_link_args = LinkArgs::new();
+    late_link_args.insert(
+        LinkerFlavor::Unix(Cc::Yes),
+        vec![
+            // LLVM will insert calls to the stack protector functions
+            // "__stack_chk_fail" and "__stack_chk_guard" into code in native
+            // object files.  Some platforms include these symbols directly in
+            // libc, but at least historically these have been provided in
+            // libssp.so on illumos and Solaris systems.
+            "-lssp".into(),
+
+            // Disable .SUNW_ldynsym sections on Solaris,
+            // as llvm cannot read the linked SHT_SYMTAB_SHNDX
+            "-Wl,-znoldynsym".into(),
+        ],
+    );
+
     TargetOptions {
         os: "solaris".into(),
         dynamic_linking: true,
@@ -10,6 +27,8 @@
         linker_flavor: LinkerFlavor::Unix(Cc::Yes),
         limit_rdylib_exports: false, // Linker doesn't support this
         eh_frame_header: false,
+        frame_pointer: FramePointer::Always,
+        late_link_args,
 
         ..Default::default()
     }
--- rustc-1.75.0-src/src/bootstrap/src/core/builder.rs~	2023-12-21 16:55:28.000000000 +0000
+++ rustc-1.75.0-src/src/bootstrap/src/core/builder.rs	2023-12-28 19:39:57.841140009 +0000
@@ -1683,10 +1683,14 @@
                 None
             };
             if let Some(rpath) = rpath {
-                rustflags.arg(&format!("-Clink-args={rpath}"));
+                rustflags.arg(&format!("-Clink-arg={rpath}"));
             }
         }
 
+        // Disable .SUNW_ldynsym sections on Solaris,
+        // as llvm cannot read the linked SHT_SYMTAB_SHNDX
+        rustflags.arg("-Clink-arg=-Wl,-znoldynsym");
+
         if let Some(host_linker) = self.linker(compiler.host) {
             hostflags.arg(format!("-Clinker={}", host_linker.display()));
         }
