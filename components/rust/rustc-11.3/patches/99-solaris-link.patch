--- rustc-1.50.0-src/library/std/src/sys/unix/mod.rs	2021-02-10 17:36:44.000000000 +0000
+++ rustc-1.50.0-src/library/std/src/sys/unix/mod.rs	2021-03-05 15:47:24.847514661 +0000
@@ -259,6 +259,7 @@
         #[link(name = "posix4")]
         #[link(name = "pthread")]
         #[link(name = "resolv")]
+        #[link(name = "nsl")]
         extern "C" {}
     } else if #[cfg(target_os = "illumos")] {
         #[link(name = "socket")]
--- rustc-1.44.1-src/compiler/rustc_target/src/spec/solaris_base.rs	2020-06-17 21:17:05.000000000 +0000
+++ rustc-1.44.1-src/compiler/rustc_target/src/spec/solaris_base.rs	2020-08-01 18:57:44.327809206 +0000
@@ -1,6 +1,23 @@
-use crate::spec::TargetOptions;
+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions, FramePointer};
 
 pub fn opts() -> TargetOptions {
+    let mut late_link_args = LinkArgs::new();
+    late_link_args.insert(
+        LinkerFlavor::Gcc,
+        vec![
+            // LLVM will insert calls to the stack protector functions
+            // "__stack_chk_fail" and "__stack_chk_guard" into code in native
+            // object files.  Some platforms include these symbols directly in
+            // libc, but at least historically these have been provided in
+            // libssp.so on illumos and Solaris systems.
+            "-lssp".to_string(),
+
+            // Disable .SUNW_ldynsym sections on Solaris,
+            // as llvm cannot read the linked SHT_SYMTAB_SHNDX
+            "-Wl,-znoldynsym".to_string(),
+        ],
+    );
+
     TargetOptions {
         dynamic_linking: true,
         executables: true,
@@ -9,6 +26,8 @@
         is_like_solaris: true,
         limit_rdylib_exports: false, // Linker doesn't support this
         eh_frame_header: false,
+        frame_pointer: FramePointer::Always,
+        late_link_args,
 
         ..Default::default()
     }
--- a/src/bootstrap/builder.rs	2020-06-17 21:17:04.000000000 +0000
+++ b/src/bootstrap/builder.rs	2020-08-12 18:42:32.832679461 +0000
@@ -961,9 +961,13 @@
                 None
             };
             if let Some(rpath) = rpath {
-                rustflags.arg(&format!("-Clink-args={}", rpath));
+                rustflags.arg(&format!("-Clink-arg={}", rpath));
             }
         }
+
+        // Disable .SUNW_ldynsym sections on Solaris,
+        // as llvm cannot read the linked SHT_SYMTAB_SHNDX
+        rustflags.arg("-Clink-arg=-Wl,-znoldynsym");
 
         // FIXME: Don't use LLD if we're compiling libtest, since it fails to link it.
         // See https://github.com/rust-lang/rust/issues/68647.
