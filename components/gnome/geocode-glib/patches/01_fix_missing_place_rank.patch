The first part of the patch fixes the crash when "place_rank" key
is not found in the hash table and a null pointer is passed to
C atoi function as the first argument.

Upstream issue:
https://gitlab.gnome.org/GNOME/geocode-glib/issues/6

Cherrypicked from the following commit in upstream:
commit e7216583a219df9d9eba21a7fe1b74543b6d5851
Author: Bastien Nocera <hadess@hadess.net>
Date:   Thu Mar 14 01:23:19 2019 +0100

    geocode-nominatim: Fix possible crash with missing place_rank

    Spotted by Ordissimo <thierry@ordissimo.com>

    Closes: #6

---------------------------------------------------------------------
The second part of the patch resolves the reason why "place_rank"
was not parsed from JSON data and added to the hash table.
The reason is that Nominatim service changed the format of JSON file
and started to use integers instead of strings for values of some
attributes including "place_rank". As a result, geocode-glib library
failed to parse the value as it expected string and not integer and
the value was not added to the hash table.

Upstream issue:
https://gitlab.gnome.org/GNOME/geocode-glib/issues/5

Cherrypicked from the following commit in upstream:
commit e1a6b067dc42618992787e84aadad2ca27ae0017
Author: Marcus Lundblad <ml@update.uu.se>
Date:   Sun Mar 10 22:59:53 2019 +0100

    geocode-nominatim: Fix parsing of integer JSON values

    It seems Nominatim has changed to (sometimes) use integer
    values for certain values (such as osm_id and rank) instead
    of strings as it was always before.

    Closes: #5

---------------------------------------------------------------------

The patch should be removed after the update to geocode-glib 3.26.1+
that requires Meson build system.

--- geocode-glib-3.23.90/geocode-glib/geocode-nominatim.c	2019-06-28 10:35:43.481184731 +0000
+++ geocode-glib-3.23.90/geocode-glib/geocode-nominatim.c	2019-06-28 10:34:46.559816114 +0000
@@ -390,9 +390,11 @@ get_place_type_from_attributes (GHashTab
                 place_type =  GEOCODE_PLACE_TYPE_DRAINAGE;
         } else if (g_strcmp0 (category, "boundary") == 0) {
                 if (g_strcmp0 (type, "administrative") == 0) {
+                        const char *place_rank;
                         int rank;
 
-                        rank = atoi (g_hash_table_lookup (ht, "place_rank"));
+                        place_rank = g_hash_table_lookup (ht, "place_rank");
+                        rank = place_rank ? atoi (place_rank) : 0;
                         if (rank < 2)
                                 place_type =  GEOCODE_PLACE_TYPE_UNKNOWN;
 
@@ -1063,21 +1065,24 @@ _geocode_read_nominatim_attributes (Json
 	}
 
 	for (i = 0; members[i] != NULL; i++) {
-		const char *value = NULL;
+		char *value = NULL;
 
 		json_reader_read_member (reader, members[i]);
 
 		if (json_reader_is_value (reader)) {
 			JsonNode *node = json_reader_get_value (reader);
 			if (json_node_get_value_type (node) == G_TYPE_STRING) {
-				value = json_node_get_string (node);
+				value = g_strdup (json_node_get_string (node));
 				if (value && *value == '\0')
-					value = NULL;
+					g_clear_pointer (&value, g_free);
+			} else if (json_node_get_value_type (node) == G_TYPE_INT64) {
+				gint64 int_value = json_node_get_int (node);
+				value = g_strdup_printf ("%"G_GINT64_FORMAT, int_value);
 			}
 		}
 
 		if (value != NULL) {
-			g_hash_table_insert (ht, g_strdup (members[i]), g_strdup (value));
+			g_hash_table_insert (ht, g_strdup (members[i]), value);
 
 			if (i == 0 && is_address) {
 				if (g_strcmp0 (members[i], "house_number") != 0)
