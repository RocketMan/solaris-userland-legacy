Patch to build gtk 3.24.11 on 11.3 with down-version glib, pango, and cups.

Building with glib 2.52.0, pango 1.40.4, and cups 1.4.5

diff -Naur a/configure.ac b/configure.ac
--- a/configure.ac	2019-09-04 03:34:36.000000000 +0000
+++ b/configure.ac	2020-03-12 16:05:21.452859489 +0000
@@ -42,8 +42,8 @@
 
 # required versions of other packages
 m4_define([glib_required_major], [2])
-m4_define([glib_required_minor], [57])
-m4_define([glib_required_micro], [2])
+m4_define([glib_required_minor], [52])
+m4_define([glib_required_micro], [0])
 m4_define([glib_required_version],
           [glib_required_major.glib_required_minor.glib_required_micro])
 m4_define([glib_min_required_minor],
@@ -54,7 +54,7 @@
 m4_define([glib_max_allowed_version], m4_join([_], [GLIB_VERSION], glib_required_major, glib_max_allowed_minor))
 GLIB_VERSION_CFLAGS="-DGLIB_MIN_REQUIRED_VERSION=glib_min_required_version -DGLIB_MAX_ALLOWED_VERSION=glib_max_allowed_version"
 
-m4_define([pango_required_version], [1.41.0])
+m4_define([pango_required_version], [1.40.4])
 m4_define([fribidi_required_version], [0.19.7])
 m4_define([atk_required_version], [2.15.1])
 m4_define([cairo_required_version], [1.14.0])
@@ -1516,7 +1516,7 @@
     CUPS_API_MINOR=`echo $ECHO_N $CUPS_API_VERSION | awk -F. '{print $2}'`
 
     if test $CUPS_API_MAJOR -lt 1 -o \
-            $CUPS_API_MAJOR -eq 1 -a $CUPS_API_MINOR -lt 7; then
+            $CUPS_API_MAJOR -eq 1 -a $CUPS_API_MINOR -lt 4; then
       AC_MSG_ERROR([CUPS >= 1.7 not found])
     fi
 
diff -Naur a/gtk/gtkfontchooserwidget.c b/gtk/gtkfontchooserwidget.c
--- a/gtk/gtkfontchooserwidget.c	2019-01-03 00:44:12.000000000 +0000
+++ b/gtk/gtkfontchooserwidget.c	2020-03-12 15:31:43.294745676 +0000
@@ -58,8 +58,8 @@
 #include <hb.h>
 #include <hb-ot.h>
 #include <hb-ft.h>
-#include <freetype/freetype.h>
-#include <freetype/ftmm.h>
+#include <freetype2/freetype.h>
+#include <freetype2/ftmm.h>
 #include "language-names.h"
 #include "script-names.h"
 #endif
@@ -567,7 +567,9 @@
                       FONT_DESC_COLUMN, &desc,
                       -1);
 
+#if PANGO_VERSION_CHECK(1,42,0)
   pango_font_description_set_variations (priv->font_desc, NULL);
+#endif
   gtk_font_chooser_widget_merge_font_desc (fontchooser,
                                            gtk_delayed_font_description_get (desc),
                                            &iter);
@@ -1491,7 +1493,9 @@
   if (s->len > 0)
     {
       font_desc = pango_font_description_new ();
+#if PANGO_VERSION_CHECK(1,42,0)
       pango_font_description_set_variations (font_desc, s->str);
+#endif
       gtk_font_chooser_widget_take_font_desc (fontchooser, font_desc);
     }
 
diff -Naur a/gtk/gtkmountoperation.c b/gtk/gtkmountoperation.c
--- a/gtk/gtkmountoperation.c	2019-09-03 19:53:07.000000000 +0000
+++ b/gtk/gtkmountoperation.c	2020-03-12 15:28:24.468022200 +0000
@@ -351,6 +351,7 @@
           g_mount_operation_set_password (op, text);
         }
 
+#if GLIB_CHECK_VERSION(2,58,0)
       if (priv->pim_entry)
         {
           text = gtk_entry_get_text (GTK_ENTRY (priv->pim_entry));
@@ -365,12 +366,15 @@
                 g_mount_operation_set_pim (op, (guint) pim);
             }
         }
+#endif
 
+#if GLIB_CHECK_VERSION(2,58,0)
       if (priv->tcrypt_hidden_toggle && gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (priv->tcrypt_hidden_toggle)))
         g_mount_operation_set_is_tcrypt_hidden_volume (op, TRUE);
 
       if (priv->tcrypt_system_toggle && gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (priv->tcrypt_system_toggle)))
         g_mount_operation_set_is_tcrypt_system_volume (op, TRUE);
+#endif
 
       if (priv->ask_flags & G_ASK_PASSWORD_SAVING_SUPPORTED)
         g_mount_operation_set_password_save (op, priv->password_save);
@@ -706,6 +710,7 @@
                                           default_domain, operation);
 
   priv->pim_entry = NULL;
+#if GLIB_CHECK_VERSION(2,58,0)
   if (priv->ask_flags & G_ASK_PASSWORD_TCRYPT)
     {
       GtkWidget *volume_type_label;
@@ -729,6 +734,7 @@
 
       priv->pim_entry = table_add_entry (operation, rows++, _("_PIM"), NULL, operation);
     }
+#endif
 
   priv->password_entry = NULL;
   if (priv->ask_flags & G_ASK_PASSWORD_NEED_PASSWORD)
@@ -846,12 +852,14 @@
         g_mount_operation_set_password (op, g_variant_get_string (value, NULL));
       else if (strcmp (key, "password_save") == 0)
         g_mount_operation_set_password_save (op, g_variant_get_uint32 (value));
+#if GLIB_CHECK_VERSION(2,58,0)
       else if (strcmp (key, "hidden_volume") == 0)
         g_mount_operation_set_is_tcrypt_hidden_volume (op, g_variant_get_boolean (value));
       else if (strcmp (key, "system_volume") == 0)
         g_mount_operation_set_is_tcrypt_system_volume (op, g_variant_get_boolean (value));
       else if (strcmp (key, "pim") == 0)
         g_mount_operation_set_pim (op, g_variant_get_uint32 (value));
+#endif
     }
 
  out:
diff -Naur a/gtk/script-names.c b/gtk/script-names.c
--- a/gtk/script-names.c	2019-01-03 00:44:12.000000000 +0000
+++ b/gtk/script-names.c	2020-03-12 15:23:04.409732351 +0000
@@ -151,10 +151,12 @@
   { G_UNICODE_SCRIPT_NEWA, HB_SCRIPT_NEWA,  NC_("Script", "Newa") },
   { G_UNICODE_SCRIPT_OSAGE, HB_SCRIPT_OSAGE,  NC_("Script", "Osage") },
   { G_UNICODE_SCRIPT_TANGUT, HB_SCRIPT_TANGUT,  NC_("Script", "Tangut") },
+#if GLIB_CHECK_VERSION(2,54,0)
   { G_UNICODE_SCRIPT_MASARAM_GONDI, HB_SCRIPT_INVALID,  NC_("Script", "Masaram Gondi") },
   { G_UNICODE_SCRIPT_NUSHU, HB_SCRIPT_INVALID,  NC_("Script", "Nushu") },
   { G_UNICODE_SCRIPT_SOYOMBO, HB_SCRIPT_INVALID,  NC_("Script", "Soyombo") },
   { G_UNICODE_SCRIPT_ZANABAZAR_SQUARE, HB_SCRIPT_INVALID,  NC_("Script", "Zanabazar Square") },
+#endif
 };
 
 const char *
diff -Naur a/modules/printbackends/cups/gtkcupsutils.h b/modules/printbackends/cups/gtkcupsutils.h
--- a/modules/printbackends/cups/gtkcupsutils.h	2019-05-16 16:39:43.000000000 +0000
+++ b/modules/printbackends/cups/gtkcupsutils.h	2020-03-12 17:49:08.326154254 +0000
@@ -24,6 +24,13 @@
 #include <cups/http.h>
 #include <cups/ipp.h>
 
+#define CUPS_VERSION PANGO_VERSION_ENCODE( \
+        CUPS_VERSION_MAJOR, \
+        CUPS_VERSION_MINOR, \
+        CUPS_VERSION_PATCH)
+#define CUPS_VERSION_CHECK(major,minor,micro) \
+        (CUPS_VERSION >= PANGO_VERSION_ENCODE(major,minor,micro))
+
 G_BEGIN_DECLS
 
 typedef struct _GtkCupsRequest        GtkCupsRequest;
diff -Naur a/modules/printbackends/cups/gtkprintbackendcups.c b/modules/printbackends/cups/gtkprintbackendcups.c
--- a/modules/printbackends/cups/gtkprintbackendcups.c	2019-05-16 16:39:43.000000000 +0000
+++ b/modules/printbackends/cups/gtkprintbackendcups.c	2020-03-12 15:34:30.219907154 +0000
@@ -29,7 +29,9 @@
  * ppdFirstCustomParam(), and ppdNextCustomParam() among others. This
  * turns off the warning so that it will compile.
  */
+#ifdef HAVE_CUPS_API_1_6
 #define _PPD_DEPRECATED
+#endif
 
 #include <cups/cups.h>
 #include <cups/language.h>
@@ -70,6 +72,7 @@
 #define _CUPS_MAX_ATTEMPTS 10
 #define _CUPS_MAX_CHUNK_SIZE 8192
 
+#ifdef HAVE_CUPS_API_1_6
 #define AVAHI_IF_UNSPEC -1
 #define AVAHI_PROTO_INET 0
 #define AVAHI_PROTO_INET6 1
@@ -79,6 +82,7 @@
 #define AVAHI_SERVER_IFACE "org.freedesktop.Avahi.Server"
 #define AVAHI_SERVICE_BROWSER_IFACE "org.freedesktop.Avahi.ServiceBrowser"
 #define AVAHI_SERVICE_RESOLVER_IFACE "org.freedesktop.Avahi.ServiceResolver"
+#endif
 
 /* define this to see warnings about ignored ppd options */
 #undef PRINT_IGNORED_OPTIONS
@@ -142,14 +146,14 @@
 #ifdef HAVE_COLORD
   CdClient   *colord_client;
 #endif
-
+#ifdef HAVE_CUPS_API_1_6
   GDBusConnection *dbus_connection;
   char *avahi_default_printer;
   guint avahi_service_browser_subscription_id;
   guint avahi_service_browser_subscription_ids[2];
   char *avahi_service_browser_paths[2];
   GCancellable *avahi_cancellable;
-
+#endif
   gboolean      secrets_service_available;
   guint         secrets_service_watch_id;
   GCancellable *secrets_service_cancellable;
@@ -227,7 +231,9 @@
 static gboolean             request_auth_info                       (gpointer                          data);
 static void                 lookup_auth_info                        (gpointer                          data);
 
+#ifdef HAVE_CUPS_API_1_6
 static void                 avahi_request_printer_list              (GtkPrintBackendCups              *cups_backend);
+#endif
 
 static void                 secrets_service_appeared_cb             (GDBusConnection *connection,
                                                                      const gchar *name,
@@ -280,6 +286,44 @@
 {
   return gtk_print_backend_cups_new ();
 }
+#ifndef HAVE_CUPS_API_1_6
+#define ippGetOperation(ipp_request) ipp_request->request.op.operation_id
+#define ippGetInteger(attr, index) attr->values[index].integer
+#define ippGetBoolean(attr, index) attr->values[index].boolean
+#define ippGetString(attr, index, foo) attr->values[index].string.text
+#define ippGetValueTag(attr) attr->value_tag
+#define ippGetName(attr) attr->name
+#define ippGetCount(attr) attr->num_values
+#define ippGetGroupTag(attr) attr->group_tag
+#define ippGetCollection(attr, index) attr->values[index].collection
+
+static int
+ippGetRange (ipp_attribute_t *attr,
+             int element,
+             int *upper)
+{
+  *upper = attr->values[element].range.upper;
+  return (attr->values[element].range.lower);
+}
+
+static ipp_attribute_t *
+ippFirstAttribute (ipp_t *ipp)
+{
+  if (!ipp)
+    return (NULL);
+
+  return (ipp->current = ipp->attrs);
+}
+
+static ipp_attribute_t *
+ippNextAttribute (ipp_t *ipp)
+{
+  if (!ipp || !ipp->current)
+    return (NULL);
+
+  return (ipp->current = ipp->current->next);
+}
+#endif
 /*
  * GtkPrintBackendCups
  */
@@ -704,13 +748,18 @@
   cups_printer = GTK_PRINTER_CUPS (gtk_print_job_get_printer (job));
   settings = gtk_print_job_get_settings (job);
 
+#ifdef HAVE_CUPS_API_1_6
   if (cups_printer->avahi_browsed)
     {
+#if CUPS_VERSION_CHECK(1,7,0)
       http = httpConnect2 (cups_printer->hostname, cups_printer->port,
                            NULL, AF_UNSPEC,
                            HTTP_ENCRYPTION_IF_REQUESTED,
                            1, 30000,
                            NULL);
+#else
+      http = httpConnect (cups_printer->hostname, cups_printer->port);
+#endif
       if (http)
         {
           request = gtk_cups_request_new_with_username (http,
@@ -749,6 +798,7 @@
         }
     }
   else
+#endif
     {
       request = gtk_cups_request_new_with_username (NULL,
                                                     GTK_CUPS_POST,
@@ -858,7 +908,9 @@
 static void
 gtk_print_backend_cups_init (GtkPrintBackendCups *backend_cups)
 {
+#ifdef HAVE_CUPS_API_1_6
   int i;
+#endif
 
   backend_cups->list_printers_poll = FALSE;
   backend_cups->got_default_printer = FALSE;
@@ -879,6 +931,7 @@
   backend_cups->colord_client = cd_client_new ();
 #endif
 
+#ifdef HAVE_CUPS_API_1_6
   backend_cups->dbus_connection = NULL;
   backend_cups->avahi_default_printer = NULL;
   backend_cups->avahi_service_browser_subscription_id = 0;
@@ -887,6 +940,7 @@
       backend_cups->avahi_service_browser_paths[i] = NULL;
       backend_cups->avahi_service_browser_subscription_ids[i] = 0;
     }
+#endif
 
   cups_get_local_default_printer (backend_cups);
 
@@ -922,9 +976,11 @@
   g_object_unref (backend_cups->colord_client);
 #endif
 
+#ifdef HAVE_CUPS_API_1_6
   g_clear_object (&backend_cups->avahi_cancellable);
   g_clear_pointer (&backend_cups->avahi_default_printer, g_free);
   g_clear_object (&backend_cups->dbus_connection);
+#endif
 
   g_clear_object (&backend_cups->secrets_service_cancellable);
   if (backend_cups->secrets_service_watch_id != 0)
@@ -939,7 +995,9 @@
 gtk_print_backend_cups_dispose (GObject *object)
 {
   GtkPrintBackendCups *backend_cups;
+#ifdef HAVE_CUPS_API_1_6
   int i;
+#endif
 
   GTK_NOTE (PRINTING,
             g_print ("CUPS Backend: %s\n", G_STRFUNC));
@@ -955,6 +1013,7 @@
     g_source_remove (backend_cups->default_printer_poll);
   backend_cups->default_printer_poll = 0;
 
+#ifdef HAVE_CUPS_API_1_6
   g_cancellable_cancel (backend_cups->avahi_cancellable);
 
   for (i = 0; i < 2; i++)
@@ -990,6 +1049,7 @@
                                             backend_cups->avahi_service_browser_subscription_id);
       backend_cups->avahi_service_browser_subscription_id = 0;
     }
+#endif
 
   backend_parent_class->dispose (object);
 }
@@ -1745,8 +1805,18 @@
 
   state = 0;
 
+#ifdef HAVE_CUPS_API_1_6
   attr = ippFindAttribute (response, "job-state", IPP_TAG_ENUM);
   state = ippGetInteger (attr, 0);
+#else
+  for (attr = response->attrs; attr != NULL; attr = attr->next)
+    {
+      if (!attr->name)
+        continue;
+
+      _CUPS_MAP_ATTR_INT (attr, state, "job-state");
+    }
+#endif
 
   done = FALSE;
   switch (state)
@@ -1985,7 +2055,9 @@
   gboolean default_printer;
   gboolean got_printer_type;
   gboolean remote_printer;
+#ifdef HAVE_CUPS_API_1_6
   gboolean avahi_printer;
+#endif
   gchar  **auth_info_required;
   gint     default_number_up;
   guchar   ipp_version_major;
@@ -2416,11 +2488,13 @@
   char *cups_server;            /* CUPS server */
 
 #ifdef HAVE_COLORD
+#ifdef HAVE_CUPS_API_1_6
   if (info->avahi_printer)
     cups_printer = gtk_printer_cups_new (info->printer_name,
 					 backend,
 					 NULL);
   else
+#endif
     cups_printer = gtk_printer_cups_new (info->printer_name,
 					 backend,
 					 cups_backend->colord_client);
@@ -2496,7 +2570,9 @@
       strcmp (cups_backend->default_printer, gtk_printer_get_name (printer)) == 0)
     gtk_printer_set_is_default (printer, TRUE);
 
+#ifdef HAVE_CUPS_API_1_6
   cups_printer->avahi_browsed = info->avahi_printer;
+#endif
 
   gtk_print_backend_add_printer (backend, printer);
   return printer;
@@ -2675,6 +2751,7 @@
     }
 }
 
+#ifdef HAVE_CUPS_API_1_6
 static void
 cups_request_printer_info_cb (GtkPrintBackendCups *cups_backend,
                               GtkCupsResult       *result,
@@ -2801,7 +2878,11 @@
   GtkCupsRequest *request;
   http_t         *http;
 
+#if CUPS_VERSION_CHECK(1,7,0)
   http = httpConnect2 (host, port, NULL, AF_UNSPEC, HTTP_ENCRYPTION_IF_REQUESTED, 1, 30000, NULL);
+#else
+  http = httpConnect (host, port);
+#endif
   if (http)
     {
       request = gtk_cups_request_new_with_username (http,
@@ -3442,6 +3523,7 @@
   cups_backend->avahi_cancellable = g_cancellable_new ();
   g_bus_get (G_BUS_TYPE_SYSTEM, cups_backend->avahi_cancellable, avahi_create_browsers, cups_backend);
 }
+#endif
 
 static void
 cups_request_printer_list_cb (GtkPrintBackendCups *cups_backend,
@@ -3492,6 +3574,7 @@
   removed_printer_checklist = gtk_print_backend_get_printer_list (backend);
 
   response = gtk_cups_result_get_response (result);
+#ifdef HAVE_CUPS_API_1_6
   for (attr = ippFirstAttribute (response); attr != NULL;
        attr = ippNextAttribute (response))
     {
@@ -3513,6 +3596,28 @@
           cups_printer_handle_attribute (cups_backend, attr, info);
           attr = ippNextAttribute (response);
         }
+#else
+  for (attr = response->attrs; attr != NULL; attr = attr->next)
+    {
+      GtkPrinter *printer;
+      gboolean status_changed = FALSE;
+      GList *node;
+      PrinterSetupInfo *info = g_slice_new0 (PrinterSetupInfo);
+      info->default_number_up = 1;
+
+      /* Skip leading attributes until we hit a printer...
+       */
+      while (attr != NULL && ippGetGroupTag (attr) != IPP_TAG_PRINTER)
+        attr = attr->next;
+
+      if (attr == NULL)
+        break;
+      while (attr != NULL && ippGetGroupTag (attr) == IPP_TAG_PRINTER)
+      {
+	cups_printer_handle_attribute (cups_backend, attr, info);
+        attr = attr->next;
+      }
+#endif
 
       if (info->printer_name == NULL ||
 	  (info->printer_uri == NULL && info->member_uris == NULL))
@@ -3619,7 +3724,9 @@
     {
       for (iter = removed_printer_checklist; iter; iter = iter->next)
         {
+#ifdef HAVE_CUPS_API_1_6
           if (!GTK_PRINTER_CUPS (iter->data)->avahi_browsed)
+#endif
             {
               mark_printer_inactive (GTK_PRINTER (iter->data), backend);
               list_has_changed = TRUE;
@@ -3641,8 +3748,10 @@
       g_free (remote_default_printer);
     }
 
+#ifdef HAVE_CUPS_API_1_6
   if (!cups_backend->got_default_printer && cups_backend->avahi_default_printer != NULL)
     set_default_printer (cups_backend, cups_backend->avahi_default_printer);
+#endif
 
   gdk_threads_leave ();
 }
@@ -3737,7 +3846,9 @@
           g_source_set_name_by_id (cups_backend->list_printers_poll, "[gtk+] cups_request_printer_list");
         }
 
+#ifdef HAVE_CUPS_API_1_6
       avahi_request_printer_list (cups_backend);
+#endif
     }
 }
 
@@ -3775,6 +3886,26 @@
   GTK_PRINTER_CUPS (printer)->reading_ppd = FALSE;
   print_backend->reading_ppds--;
 
+#ifndef HAVE_CUPS_API_1_6
+  if (gtk_cups_result_is_error (result))
+    {
+      gboolean success = FALSE;
+
+      /* If we get a 404 then it is just a raw printer without a ppd
+         and not an error. */
+      if ((gtk_cups_result_get_error_type (result) == GTK_CUPS_ERROR_HTTP) &&
+          (gtk_cups_result_get_error_status (result) == HTTP_NOT_FOUND))
+        {
+          gtk_printer_set_has_details (printer, TRUE);
+          success = TRUE;
+        }
+
+      g_signal_emit_by_name (printer, "details-acquired", success);
+
+      goto done;
+    }
+#endif
+
   if (!gtk_cups_result_is_error (result))
     {
       /* let ppdOpenFd take over the ownership of the open file */
@@ -3784,6 +3915,7 @@
       ppdMarkDefaults (data->printer->ppd_file);
     }
 
+#ifdef HAVE_CUPS_API_1_6
   fstat (g_io_channel_unix_get_fd (data->ppd_io), &data_info);
   /*
    * Standalone Avahi printers and raw printers don't have PPD files or have
@@ -3803,6 +3935,7 @@
 
       goto done;
     }
+#endif
 
   gtk_printer_set_has_details (printer, TRUE);
   g_signal_emit_by_name (printer, "details-acquired", TRUE);
@@ -3831,7 +3964,11 @@
   GTK_NOTE (PRINTING,
             g_print ("CUPS Backend: %s\n", G_STRFUNC));
 
-  if (cups_printer->remote && !cups_printer->avahi_browsed)
+  if (cups_printer->remote
+#ifdef HAVE_CUPS_API_1_6
+      && !cups_printer->avahi_browsed
+#endif
+      )
     {
       GtkCupsConnectionState state;
 
@@ -3867,10 +4004,16 @@
         }
     }
 
+#if CUPS_VERSION_CHECK(1,7,0)
   http = httpConnect2 (cups_printer->hostname, cups_printer->port,
                        NULL, AF_UNSPEC,
                        cupsEncryption (),
                        1, 30000, NULL);
+#else
+  http = httpConnectEncrypt (cups_printer->hostname,
+			     cups_printer->port,
+			     cupsEncryption ());
+#endif  
 
   data = g_new0 (GetPPDData, 1);
 
@@ -4240,7 +4383,11 @@
   if (!cups_printer->reading_ppd &&
       gtk_printer_cups_get_ppd (cups_printer) == NULL)
     {
-      if (cups_printer->remote && !cups_printer->avahi_browsed)
+      if (cups_printer->remote
+#ifdef HAVE_CUPS_API_1_6
+	  && !cups_printer->avahi_browsed
+#endif
+	  )
         {
           if (cups_printer->get_remote_ppd_poll == 0)
             {
--- a/modules/printbackends/cups/gtkcupsutils.c	2019-06-17 18:04:21.000000000 +0000
+++ b/modules/printbackends/cups/gtkcupsutils.c	2020-03-12 17:52:21.118564568 +0000
@@ -81,6 +81,28 @@
   _get_read_data
 };
 
+#ifndef HAVE_CUPS_API_1_6
+#define ippSetOperation(ipp_request, ipp_op_id) ipp_request->request.op.operation_id = ipp_op_id
+#define ippSetRequestId(ipp_request, ipp_rq_id) ipp_request->request.op.request_id = ipp_rq_id
+#define ippSetState(ipp_request, ipp_state) ipp_request->state = ipp_state
+#define ippGetString(attr, index, foo) attr->values[index].string.text
+#define ippGetCount(attr) attr->num_values
+
+int
+ippSetVersion (ipp_t *ipp,
+               int    major,
+               int    minor)
+{
+  if (!ipp || major < 0 || minor < 0)
+    return 0;
+
+  ipp->request.any.version[0] = major;
+  ipp->request.any.version[1] = minor;
+
+  return 1;
+}
+#endif
+
 static void
 gtk_cups_result_set_error (GtkCupsResult    *result,
                            GtkCupsErrorType  error_type,
@@ -146,10 +168,16 @@
     }
   else
     {
+#if CUPS_VERSION_CHECK(1,7,0)
       request->http = httpConnect2 (request->server, ippPort (),
                                     NULL, AF_UNSPEC,
                                     cupsEncryption (),
                                     1, 30000, NULL);
+#else
+      request->http = httpConnectEncrypt (request->server,
+					  ippPort (),
+					  cupsEncryption ());
+#endif
 
       if (request->http)
         httpBlocking (request->http, 0);
@@ -664,10 +692,16 @@
 
   if (request->http == NULL)
     {
+#if CUPS_VERSION_CHECK(1,7,0)
       request->http = httpConnect2 (request->server, ippPort (),
                                     NULL, AF_UNSPEC,
                                     cupsEncryption (),
                                     1, 30000, NULL);
+#else
+      request->http = httpConnectEncrypt (request->server,
+					  ippPort (),
+					  cupsEncryption ());
+#endif
       if (request->http == NULL)
         request->attempts++;
 
diff -Naur a/modules/printbackends/cups/gtkprintercups.c b/modules/printbackends/cups/gtkprintercups.c
--- a/modules/printbackends/cups/gtkprintercups.c	2019-05-16 16:39:43.000000000 +0000
+++ b/modules/printbackends/cups/gtkprintercups.c	2020-03-12 18:33:08.936809920 +0000
@@ -115,10 +115,12 @@
   printer->remote_cups_connection_test = NULL;
   printer->auth_info_required = NULL;
   printer->default_number_up = 1;
+#ifdef HAVE_CUPS_API_1_6
   printer->avahi_browsed = FALSE;
   printer->avahi_name = NULL;
   printer->avahi_type = NULL;
   printer->avahi_domain = NULL;
+#endif
   printer->ipp_version_major = 1;
   printer->ipp_version_minor = 1;
   printer->supports_copies = FALSE;
@@ -174,9 +176,11 @@
     g_object_unref (printer->colord_profile);
 #endif
 
+#ifdef HAVE_CUPS_API_1_6
   g_free (printer->avahi_name);
   g_free (printer->avahi_type);
   g_free (printer->avahi_domain);
+#endif
 
   g_strfreev (printer->covers);
 
