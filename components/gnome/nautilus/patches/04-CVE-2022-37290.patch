Fixes CVE-2022-37290.

From 4c68d1bb32de48d47050dd90f4c246b160c3f6b5 Mon Sep 17 00:00:00 2001
From: Corey Berla <corey@berla.me>
Date: Fri, 25 Nov 2022 15:21:58 -0800
Subject: [PATCH 1/2] file-operation: Return early when basename is NULL

Calling g_utf8_validate() on a NULL string crashes Nautilus.  This
can occur if performing an operation on an invalid file. If
basename is NULL, there's nothing we would do anyways, so just
return early and prevent the crash.

There's a similar issue with get_unique_target_file(), but
if a bad uri was passed to this function it should fail much
earlier, so lets just add an assertion.

Fixes: https://gitlab.gnome.org/GNOME/nautilus/-/issues/2376

--

From 808bbe093e37c9a5cedbb51022790cf2b8377379 Mon Sep 17 00:00:00 2001
From: Corey Berla <corey@berla.me>
Date: Sun, 4 Dec 2022 09:07:49 -1000
Subject: [PATCH 2/2] dbus-manager: Fix another crash from invalid dbus
 innvocation

Passing an invalid uri to create-folder also crashes nautilus.
If the parent_file is NULL, return an error instead of crashes.

--- nautilus-3.34.0/src/nautilus-file-operations.c
+++ nautilus-3.34.0/src/nautilus-file-operations.c
@@ -993,6 +993,11 @@ get_basename (GFile *file)
     if (name == NULL)
     {
         basename = g_file_get_basename (file);
+        if (basename == NULL)
+        {
+            return g_strdup (_("unknown"));
+        }
+
         if (g_utf8_validate (basename, -1, NULL))
         {
             name = basename;
@@ -4212,6 +4217,7 @@ get_unique_target_file (GFile      *src,
     if (dest == NULL)
     {
         basename = g_file_get_basename (src);
+        g_assert (basename == NULL);
 
         if (g_utf8_validate (basename, -1, NULL))
         {
--- nautilus-3.34.0/src/nautilus-dbus-manager.c
+++ nautilus-3.34.0/src/nautilus-dbus-manager.c
@@ -126,6 +126,11 @@ handle_create_folder (NautilusDBusFileOp
     file = g_file_new_for_uri (uri);
     basename = g_file_get_basename (file);
     parent_file = g_file_get_parent (file);
+    if (parent_file == NULL || basename == NULL)
+    {
+        g_dbus_method_invocation_return_error (invocation, G_IO_ERROR, G_IO_ERROR_INVALID_ARGUMENT, "Invalid uri: %s", uri);
+        return TRUE;
+    }
     parent_file_uri = g_file_get_uri (parent_file);
 
     g_application_hold (g_application_get_default ());
