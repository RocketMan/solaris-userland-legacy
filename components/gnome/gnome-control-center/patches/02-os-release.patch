Use /etc/release & uname instead of /etc/os-release to get OS name on Solaris.

Need to submit upstream or get RE to start delivering /etc/os-release

--- a/panels/info/cc-info-overview-panel.c	2019-11-15 19:46:39.918739283 -0800
+++ b/panels/info/cc-info-overview-panel.c	2019-11-15 19:51:06.601169001 -0800
@@ -49,6 +49,9 @@
 
 #include "cc-info-overview-panel.h"
 
+#ifdef __sun
+#include <sys/utsname.h>
+#endif
 
 typedef struct {
   /* Will be one or 2 GPU name strings, or "Unknown" */
@@ -423,6 +426,57 @@
         }
     }
 
+#ifdef __sun
+  /* Generate a subset of the fields documented in
+     https://www.freedesktop.org/software/systemd/man/os-release.html
+     from other sources on Solaris */
+  else 
+    {
+      gchar *key, *value, *name;
+      struct utsname uts;
+
+      hashtable = g_hash_table_new_full (g_str_hash, g_str_equal,
+                                         g_free, g_free);
+
+      if (g_file_get_contents ("/etc/release", &buffer, NULL, NULL))
+        {
+          char *start = buffer;
+          char *end = strchr (start, '\n');
+
+          if (start != NULL && end != NULL)
+            {
+              name = g_strndup (start, end - start);
+              if (name != NULL)
+                {
+
+                  g_strstrip(name);
+                }
+            }
+          g_free (buffer);
+        }
+
+      key = g_strdup ("PRETTY_NAME");
+      if (name != NULL)
+        value = name;
+      else
+        value = g_strdup("Oracle Solaris");
+      if (key != NULL && value != NULL)
+        g_hash_table_insert (hashtable, key, value);
+
+      uname(&uts);
+      key = g_strdup ("BUILD_ID");
+      value = g_strdup (uts.version);
+      if (key != NULL && value != NULL)
+        g_hash_table_insert (hashtable, key, value);
+
+      key = g_strdup ("NAME");
+      value = g_strdup("Oracle Solaris");
+      if (key != NULL && value != NULL)
+        g_hash_table_insert (hashtable, key, value);
+
+    }
+#endif
+
   return hashtable;
 }
 
--- a/panels/info/cc-info-overview-panel.c	2020-03-04 13:59:46.111029491 -0800
+++ b/panels/info/cc-info-overview-panel.c	2020-03-04 14:07:42.364590916 -0800
@@ -36,7 +36,9 @@
 #include <glibtop/mountlist.h>
 #include <glibtop/mem.h>
 #include <glibtop/sysinfo.h>
+#ifndef __sun
 #include <udisks/udisks.h>
+#endif
 
 #include <gdk/gdk.h>
 
@@ -83,7 +85,11 @@
 
   GCancellable   *cancellable;
 
+#ifndef __sun
   UDisksClient   *client;
+#else
+  void 		 *client;
+#endif
 
   GraphicsData   *graphics_data;
 } CcInfoOverviewPanelPrivate;
@@ -552,6 +558,7 @@
       return;
     }
 
+#ifndef __sun
   manager = udisks_client_get_object_manager (priv->client);
   objects = g_dbus_object_manager_get_objects (manager);
 
@@ -580,6 +587,7 @@
     {
       gtk_label_set_text (GTK_LABEL (priv->disk_label), _("Unknown"));
     }
+#endif
 }
 
 static char *
@@ -922,7 +930,9 @@
   else
     gtk_widget_destroy (priv->updates_button);
 
+#ifndef __sun
   priv->client = udisks_client_new_sync (NULL, &error);
+#endif
 
   if (error != NULL)
       g_warning ("Unable to get UDisks client: %s. Disk information will not be available.",
