Changes for python3 from upstream

--- a/gtkdoc-depscan.in	2020-05-14 23:03:43.105403958 -0700
+++ b/gtkdoc-depscan.in	2020-05-14 23:05:45.708639642 -0700
@@ -1,5 +1,7 @@
 #!@PYTHON@
 
+from __future__ import print_function
+
 import gzip, os.path, re
 
 from os import environ, popen, walk
@@ -285,7 +287,7 @@
     for filename, lineno, symbol in matches:
         if not isinstance(symbol, Symbol):
             if options.verbose:
-                print '%s:%d: unknown symbol %s' % (filename, lineno, symbol)
+                print('%s:%d: unknown symbol %s' % (filename, lineno, symbol))
             continue
 
         since = '%s-%s' % (symbol.book.name, symbol.since)
@@ -308,7 +310,7 @@
         options.books = default_books
 
     def trace(message, *args):
-        if options.verbose: print message % args
+        if options.verbose: print(message % args)
 
     def parse_book(name):
         try:
@@ -380,17 +382,17 @@
     if options.summarize:
         summary = summarize_matches(matches)
         for since in sorted(summary.keys()):
-            print '%s required for' % since
+            print('%s required for' % since)
             for x in summary[since]:
-                print '    %u %s' % (x[1], x[0])
+                print('    %u %s' % (x[1], x[0]))
     else:
         for filename, lineno, symbol in matches:
             if isinstance(symbol, Symbol):
                 args = filename, lineno, symbol.book.name, symbol.since, symbol.name
-                print '%s:%d: %s-%s required for %s' % args
+                print('%s:%d: %s-%s required for %s' % args)
 
             elif options.verbose:
-                print '%s:%d: unknown symbol %s' % (filename, lineno, symbol)
+                print('%s:%d: unknown symbol %s' % (filename, lineno, symbol))
 
     if options.unknown:
         unknown = [m[2].split('_')[0].lower() for m in unknown_symbols]
@@ -397,6 +399,6 @@
         unknown = list(set(unknown))
         unknown.sort()
 
-        print 'unknown prefixes: %s' % ', '.join(unknown)
+        print('unknown prefixes: %s' % ', '.join(unknown))
 
     raise SystemExit(matches and 1 or 0)
--- a/gtkdoc-depscan.in	2020-05-14 23:10:11.926469180 -0700
+++ b/gtkdoc-depscan.in	2020-05-14 23:10:33.811085775 -0700
@@ -42,7 +42,7 @@
                 break
 
         if not self.__catalog:
-            raise IOError, 'No devhelp book found for "%s"' % name
+            raise IOError('No devhelp book found for "%s"' % name)
 
     def __cmp__(self, other):
         if isinstance(other, Book):
--- a/gtkdoc-depscan.in	2020-05-14 23:11:37.772387291 -0700
+++ b/gtkdoc-depscan.in	2020-05-14 23:12:01.980754671 -0700
@@ -321,7 +321,7 @@
             version = version and Symbol.VersionInfo(version)
             return name, Book(name, options.dirs, version)
 
-        except IOError, e:
+        except IOError as  e:
             print >>stderr, 'WARNING: %s.' % e
 
     def scan_source_file(name):
@@ -330,7 +330,7 @@
         try:
             contents = __comment_regex.sub('', file(name).read())
 
-        except IOError, e:
+        except IOError as e:
             print >>stderr, e
 
         if contents:
