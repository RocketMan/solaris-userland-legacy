#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2020, 2021, Oracle and/or its affiliates.
#

#
# Specify which packages are to be moved to 'legacy' namespace. Please see
# doc/packaging.txt section "Component EOF (End Of Feature)"
#

#
# Name the affected packages and depend actions here. The lines here just
# 'mark' the lines by setting 'mark_legacy' attribute. All such marked lines
# will be processed below.
# An example can be:
# <transform set name=pkg.fmri value=(pkg:/+)?.*(my/package) -> set mark_legacy true>
# matching multiple packages is possible
# <transform set name=pkg.fmri value=(pkg:/+)?.*(library/perl-5/.*-522.*) -> set mark_legacy true>
#

# Perl 5.22 and related packages
<transform set name=pkg.fmri value=(pkg:/+)runtime/perl-522 -> set mark_legacy true>
<transform set name=pkg.fmri value=(pkg:/+)library/perl-5/?.*-522 -> set mark_legacy true>
<transform set name=pkg.fmri value=(pkg:/+)image/graphviz/graphviz-perl-522 -> set mark_legacy true>
<transform set name=pkg.fmri value=(pkg:/+)terminal/cssh-522 -> set mark_legacy true>

# Perl 5.26 and related packages
<transform set name=pkg.fmri value=(pkg:/+)runtime/perl-526 -> set mark_legacy true>
<transform set name=pkg.fmri value=(pkg:/+)library/perl-5/?.*-526 -> set mark_legacy true>
<transform set name=pkg.fmri value=(pkg:/+)image/graphviz/graphviz-perl-526 -> set mark_legacy true>
<transform set name=pkg.fmri value=(pkg:/+)terminal/cssh-526 -> set mark_legacy true>

<transform set name=pkg.fmri value=(pkg:/+)?.*(library/libmozjs-38) -> set mark_legacy true>

# Python 2.7 and all related packages
<transform set name=pkg.fmri value=(pkg:/+)?.*(-27).* -> set mark_legacy true>

# Mark packages which are unnecessary in newer runtimes
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/backports.functools_lru_cache).* -> set mark_legacy true>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/enum).* -> set mark_legacy true>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/funcsigs).* -> set mark_legacy true>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/ipaddress).* -> set mark_legacy true>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/monotonic).* -> set mark_legacy true>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/scandir).* -> set mark_legacy true>

# The following packages should not be marked
<transform set name=pkg.fmri value=(pkg:/+)?.*(developer/build/scons-27) -> delete mark_legacy true>

# httping move to legacy
<transform set name=pkg.fmri value=(pkg:/+)?.*(diagnostic/httping) -> set mark_legacy true>

<transform set name=pkg.fmri value=(pkg:/+)?.*(runtime/ruby-25) -> set mark_legacy true>

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Older legacy processing bellow this line (before PSARC/2020/053).
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/pygtk2-27) -> set legacy_fmri 11.4.24.0.1.75.0>
<transform depend fmri=(pkg:/+)?.*(library/python/pygtk2-27) -> set legacy_fmri 11.4.24.0.1.75.0>

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Automatic processing starts here, no change is needed beyond this line
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#
# If the package is marked by both old and new legacy flag (which we should
# avoid but can happen), make sure only one of them is being used.
#
<transform set name=pkg.fmri mark_legacy=.* legacy_fmri=.* -> delete mark_legacy .*>

#
# Make sure that we don't modify packages created from the history files
# (tools/generate-history adds do_not_move_to_legacy=true)
#
# First we remove (unmark) the package by removing legacy_fmri attribute
<transform set name=pkg.fmri do_not_move_to_legacy=true legacy_fmri=.* -> delete legacy_fmri .*>
<transform set name=pkg.fmri do_not_move_to_legacy=true mark_legacy=.* -> delete mark_legacy .*>
# Now we can get rid of do_not_move_to_legacy attribute as we don't need it anymore
<transform set name=pkg.fmri do_not_move_to_legacy=.* -> delete do_not_move_to_legacy .*>


# Provide some support for the packages manually set in the legacy namespace
<transform set name=pkg.fmri value=^(pkg://[^/]+/|pkg:/|)legacy/(.*) -> \
    emit set name=pkg.legacy value=true>
# But do not apply any other automation
<transform set name=pkg.fmri value=^(pkg://[^/]+/|pkg:/|)legacy/(.*) -> \
    delete legacy_fmri .*>


#
# Force the rename with a dependency on the old name
# Ex:
#   set name=pkg.fmri value=pkg:/library/perl-5/CGI-522@4.37,5.11-11.4.21.0.0.61.0
#   (the 'value' will be later changed to pkg:/legacy/library/...)
#   Produces
#   depend fmri=library/perl-5/CGI-522@4.37,11.4.21.0.0.61.0 type=optional
#
# This is like saying "if you are going to install this legacy package, make
# sure that you also install the original package with at least the FMRI where
# it was renamed.". This makes sure that you can't install the original package
# in a version where it delivers some files. We also must protect the depend
# action form further processing by setting do_not_remove_version.
#
<transform set name=pkg.fmri legacy_fmri=.* value=([^@]+[^,]+,) -> \
    emit depend do_not_remove_version=yes type=optional fmri=%<1>%(legacy_fmri) >


#
# Add legacy metadata to a package being renamed to legacy
#
<transform set name=pkg.fmri legacy_fmri=.* -> \
    emit set name=pkg.legacy value=true>


#
# Move the package into 'legacy' namespace
#
# value=a/b/c -> value=legacy/a/b/c
# value=pkg:/a/b/c -> value=pkg:/legacy/a/b/c
# value=pkg://publisher/a/b/c -> value=pkg://publisher/legacy/a/b/c
#
<transform set name=pkg.fmri legacy_fmri=.* value=^(pkg://[^/]+/|pkg:/|)(.*) -> set value %<1>legacy/%<2>>


#
# The legacy package content will clash with the regular package. We need to
# add pkglint exceptions so that it can be published.
#
<transform set name=pkg.fmri legacy_fmri=.* -> \
    emit set name=pkg.linted.pkglint.dupaction001.1 value=true>
<transform set name=pkg.fmri legacy_fmri=.* -> \
    emit set name=pkg.linted.pkglint.dupaction010.2 value=true>

#
# Remove our legacy_fmri help attribute
#
<transform set name=pkg.fmri legacy_fmri=.* -> delete legacy_fmri .*>


# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# depend processing
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#
# If the dependency is already in legacy package then cancel any automation
#
<transform depend legacy_fmri=.* fmri=^(pkg://[^/]+/|pkg:/|)legacy/(.*) -> delete legacy_fmri .*>

#
# If the dependency is of type=incorporate, cancel any automation too. This
# makes sure that userland-incorporation (and other incorporations) still lock
# all the packages in correct FMRI version
#
<transform depend type=incorporate legacy_fmri=.* -> delete legacy_fmri .*>

#
# Also abandon any modification in actions which are marked by
# do_not_remove_version keyword
#
<transform depend legacy_fmri=.* do_not_remove_version=.* -> delete legacy_fmri .*>
<transform depend do_not_remove_version=.* -> delete do_not_remove_version .*>

#
# Add legacy metadata to packages handled by the newer legacy process
#
<transform set name=pkg.fmri mark_legacy=true -> \
    emit set name=pkg.legacy value=true>
# remove mark_legacy attribute as we don't need it anymore
<transform set name=pkg.fmri mark_legacy=.* -> delete mark_legacy .*>

#
# Anything left is a depend action pointing to a package which was moved to
# legacy. In other words pointing to the rename package. That rename package
# FMRI version was set to the build in which we moved the package to legacy via
# the AUTO_FMRI automation. That means that we should freeze all the depend
# action targets to that specific FMRI too. That is not easy as the depend
# actions are often created by some other automation. So instead we
# remove the FMRI version at all and depend on userland-incorporation to hold
# the correct package versions for given build.
#
<transform depend legacy_fmri=.* -> edit fmri @.* "">
<transform depend legacy_fmri=.* -> delete legacy_fmri .*>
