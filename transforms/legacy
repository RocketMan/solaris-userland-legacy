#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
#

#
# Specify which packages are to be moved to 'legacy' namespace. Please see
# doc/packaging.txt section "Component EOF (End Of Feature)"
#
# Moving to legacy namespace consists of multiple things.
# a) we prefix the package name by 'legacy/' string, for example pkg:/legacy/abc.
#    This happens here in this transform file.
# b) we create history file record stating that the package was renamed to
#    legacy/ one. Like
#    abc@AUTO_FMRI legacy/abc
# c) we declare that the just created legacy package requires the
#    abc@AUTO_FMRI so user can't install abc@PREVIOUS_FMRI and
#    legacy/abc@AUTO_FMRI at the same time.
#
#    If we ever change the legacy/abc package (for example fix before the
#    package is removed) we still must generate the dependency on rename
#    package with FMRI where the rename package was created. If we fail to do
#    that we'll need to ship the non-legacy rename package again every time we
#    ship new version of the legacy package.
#

#
# Name the affected packages and depend actions here. The lines here just
# 'mark' the lines by setting 'legacy_fmri' attribute. All such marked lines
# will be processed below. There always have to be two lines with identical
# condition - one line for 'set pkg.fmri' and second line for 'depend' action.
# An example can be:
# <transform set name=pkg.fmri value=(pkg:/+)?.*(my/package) -> set legacy_fmri AUTO_FMRI>
# <transform depend fmri=(pkg:/+)?.*(my/package) -> set legacy_fmri AUTO_FMRI>
# matching multiple packages is possible
# <transform set name=pkg.fmri value=(pkg:/+)?.*(library/perl-5/.*-522.*) -> set legacy_fmri AUTO_FMRI>
# <transform depend fmri=(pkg:/+)?.*(library/perl-5/.*-522.*) -> set legacy_fmri AUTO_FMRI>
#

<transform set name=pkg.fmri value=(pkg:/+)?.*(apache-wsgi-34) -> set legacy_fmri 11.5.0.0.0.63.0>
<transform depend fmri=(pkg:/+)?.*(apache-wsgi-34) -> set legacy_fmri 11.5.0.0.0.63.0>

<transform set name=pkg.fmri value=(pkg:/+)?.*(apache-wsgi-35) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(apache-wsgi-35) -> set legacy_fmri AUTO_FMRI>

<transform set name=pkg.fmri value=(pkg:/+)?.*(developer/gcc.*-5) -> set legacy_fmri 11.5.0.0.0.63.0>
<transform depend fmri=(pkg:/+)?.*(developer/gcc.*-5) -> set legacy_fmri 11.5.0.0.0.63.0>

<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/django-(27|34|35)) -> set legacy_fmri 11.5.0.0.0.63.0>
<transform depend fmri=(pkg:/+)?.*(library/python/django-(27|34|35)) -> set legacy_fmri 11.5.0.0.0.63.0>

<transform set name=pkg.fmri value=(pkg:/+)?.*(python/[^/]*-34) -> set legacy_fmri 11.5.0.0.0.63.0>
<transform depend fmri=(pkg:/+)?.*(python/[^/]*-34) -> set legacy_fmri 11.5.0.0.0.63.0>

<transform set name=pkg.fmri value=(pkg:/+)?.*(python/[^/]*-35) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(python/[^/]*-35) -> set legacy_fmri AUTO_FMRI>

<transform set name=pkg.fmri value=(pkg:/+)?.*(runtime/python-34) -> set legacy_fmri 11.5.0.0.0.63.0>
<transform depend fmri=(pkg:/+)?.*(runtime/python-34) -> set legacy_fmri 11.5.0.0.0.63.0>

<transform set name=pkg.fmri value=(pkg:/+)?.*(runtime/python-35) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(runtime/python-35) -> set legacy_fmri AUTO_FMRI>

<transform set name=pkg.fmri value=(pkg:/+)?.*(system/library/gcc/gcc.*-runtime-5) -> set legacy_fmri 11.5.0.0.0.63.0>
<transform depend fmri=(pkg:/+)?.*(system/library/gcc/gcc.*-runtime-5) -> set legacy_fmri 11.5.0.0.0.63.0>

<transform set name=pkg.fmri value=(pkg:/+)?.*(web/php-71) -> set legacy_fmri 11.5.0.0.0.63.0>
<transform depend fmri=(pkg:/+)?.*(web/php-71) -> set legacy_fmri 11.5.0.0.0.63.0>


<transform set name=pkg.fmri value=(pkg:/+)?.*(cloud/openstack/openstack-common) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(cloud/openstack/openstack-common) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(cloud/openstack/swift) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(cloud/openstack/swift) -> set legacy_fmri AUTO_FMRI>

<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/amqp) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/amqp) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/anyjson) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/anyjson) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/cachetools) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/cachetools) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/ceilometerclient) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/ceilometerclient) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/contextlib2) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/contextlib2) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/eventlet) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/eventlet) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/filechunkio) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/filechunkio) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/futures) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/futures) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/futurist) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/futurist) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/greenlet) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/greenlet) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/httplib2) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/httplib2) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/iniparse) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/iniparse) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/ipython) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/ipython) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/keystoneauth1) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/keystoneauth1) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/keystoneclient) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/keystoneclient) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/keystonemiddleware) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/keystonemiddleware) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/kombu) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/kombu) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/librabbitmq) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/librabbitmq) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/m2crypto) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/m2crypto) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/oslo.concurrency) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/oslo.concurrency) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/oslo.messaging) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/oslo.messaging) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/oslo.middleware) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/oslo.middleware) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/oslo.service) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/oslo.service) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/osprofiler) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/osprofiler) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/pika) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/pika) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/pika-pool) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/pika-pool) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/positional) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/positional) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/pycadf) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/pycadf) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/pyrabbit) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/pyrabbit) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/repoze.lru) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/repoze.lru) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/retrying) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/retrying) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/routes) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/routes) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/swiftclient) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/swiftclient) -> set legacy_fmri AUTO_FMRI>

<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/libxsl-27) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/libxsl-27) -> set legacy_fmri AUTO_FMRI>
<transform set name=pkg.fmri value=(pkg:/+)?.*(library/python/net-snmp-27) -> set legacy_fmri AUTO_FMRI>
<transform depend fmri=(pkg:/+)?.*(library/python/net-snmp-27) -> set legacy_fmri AUTO_FMRI>

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Automatic processing starts here, no change is needed beyond this line
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#
# Make sure that we don't modify packages created from the history files
# (tools/generate-history adds do_not_move_to_legacy=true)
#
# First we remove (unmark) the package by removing legacy_fmri attribute
<transform set name=pkg.fmri do_not_move_to_legacy=true legacy_fmri=.* -> delete legacy_fmri .*>
# Now we can get rid of do_not_move_to_legacy attribute as we don't need it anymore
<transform set name=pkg.fmri do_not_move_to_legacy=.* -> delete do_not_move_to_legacy .*>


# Provide some support for the packages manually set in the legacy namespace
<transform set name=pkg.fmri value=^(pkg://[^/]+/|pkg:/|)legacy/(.*) -> \
    emit set name=pkg.namespace value=legacy>
# But do not apply any other automation
<transform set name=pkg.fmri value=^(pkg://[^/]+/|pkg:/|)legacy/(.*) -> \
    delete legacy_fmri .*>


#
# Force the rename with a dependency on the old name
# Ex:
#   set name=pkg.fmri value=pkg:/library/perl-5/CGI-522@4.37,5.11-11.5.0.0.0.61.0
#   (the 'value' will be later changed to pkg:/legacy/library/...)
#   Produces
#   depend fmri=library/perl-5/CGI-522@4.37,11.5.0.0.0.61.0 type=optional
#
# This is like saying "if you are going to install this legacy package, make
# sure that you also install the original package with at least the FMRI where
# it was renamed.". This makes sure that you can't install the original package
# in a version where it delivers some files. We also must protect the depend
# action form further processing by setting do_not_remove_version.
#
<transform set name=pkg.fmri legacy_fmri=.* value=([^@]+[^,]+,) -> \
    emit depend do_not_remove_version=yes type=optional fmri=%<1>%(legacy_fmri) >


#
# Add legacy metadata to a package being renamed to legacy
#
<transform set name=pkg.fmri legacy_fmri=.* -> \
    emit set name=pkg.namespace value=legacy>


#
# Move the package into 'legacy' namespace
#
# value=a/b/c -> value=legacy/a/b/c
# value=pkg:/a/b/c -> value=pkg:/legacy/a/b/c
# value=pkg://publisher/a/b/c -> value=pkg://publisher/legacy/a/b/c
#
<transform set name=pkg.fmri legacy_fmri=.* value=^(pkg://[^/]+/|pkg:/|)(.*) -> set value %<1>legacy/%<2>>


#
# The legacy package content will clash with the regular package. We need to
# add pkglint exceptions so that it can be published.
#
<transform set name=pkg.fmri legacy_fmri=.* -> \
    emit set name=pkg.linted.pkglint.dupaction001.1 value=true>
<transform set name=pkg.fmri legacy_fmri=.* -> \
    emit set name=pkg.linted.pkglint.dupaction010.2 value=true>

#
# Remove our legacy_fmri help attribute
#
<transform set name=pkg.fmri legacy_fmri=.* -> delete legacy_fmri .*>


# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# depend processing
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#
# If the dependency is already in legacy package then cancel any automation
#
<transform depend legacy_fmri=.* fmri=^(pkg://[^/]+/|pkg:/|)legacy/(.*) -> delete legacy_fmri .*>

#
# If the dependency is of type=incorporate, cancel any automation too. This
# makes sure that userland-incorporation (and other incorporations) still lock
# all the packages in correct FMRI version
#
<transform depend type=incorporate legacy_fmri=.* -> delete legacy_fmri .*>

#
# Also abandon any modification in actions which are marked by
# do_not_remove_version keyword
#
<transform depend legacy_fmri=.* do_not_remove_version=.* -> delete legacy_fmri .*>
<transform depend do_not_remove_version=.* -> delete do_not_remove_version .*>

#
# Anything left is a depend action pointing to a package which was moved to
# legacy. In other words pointing to the rename package. That rename package
# FMRI version was set to the build in which we moved the package to legacy via
# the AUTO_FMRI automation. That means that we should freeze all the depend
# action targets to that specific FMRI too. That is not easy as the depend
# actions are often created by some other automation. So instead we
# remove the FMRI version at all and depend on userland-incorporation to hold
# the correct package versions for given build.
#
<transform depend legacy_fmri=.* -> edit fmri @.* "">
<transform depend legacy_fmri=.* -> delete legacy_fmri .*>
